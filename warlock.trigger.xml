<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>warlock</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>warlock</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Prompt</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>jest_prompt</name>
					<script>raiseEvent("gotPrompt")
--echo("wizline", "PROMPT!\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>usun_prompt</name>
						<script>selectCurrentLine()
deleteLine()
--echo("wizline", "USUWAM LINIE PROMPTA\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>&gt; </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>usuwaj_dziubki</name>
					<script>--echo("wizline", "USUWAM DZIUBEK\n")

selectString("&gt; ", 1)
replace("")
line = getCurrentLine()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>&gt; </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>podmieniaj_taby</name>
					<script>while selectString("\t",1) &gt; -1 do
  replace("    ")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\t</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Chodzenie</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>brak_przejscia</name>
					<script>selectCurrentLine()
fg("red")
resetFormat()
raiseEvent("moveNoExit", matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Nie widzisz zadnego wyjscia prowadzacego na (.+)\.$</string>
						<string>^Schodzisz z traktu na (.+), lecz zawracasz nie znalazlszy sciezki.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Nie_przeszlismy</name>
					<script>selectCurrentLine()
fg("red")
resetFormat()
raiseEvent("moveNoExit", matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Jestes tak zmeczony, ze nie mozesz isc (w tym kierunku).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>drzwi_zamkniete</name>
					<script>--drzwi_zamkniete
selectCurrentLine()
fg("red")
resetFormat()
raiseEvent("moveNoExit", matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.+ (drzwi|wrota|brama)) (sa|jest) (zamkniete|zamknieta|zamkniety).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Lokacja</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#00aa00</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Opis</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ciemno_nie_widac</name>
						<script>selectCurrentLine()
fg("red")
resetFormat()
--raiseEvent("gotRoomDescriptionDark")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Panujacy mrok nie pozwala ci dokladnie okreslic gdzie sie znajdujesz.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wyjscia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>widoczne_wyjscia</name>
						<script>--echo("\nIle: " .. matches[2] .. ", wyjscia: " .. matches[3]);
selectCurrentLine()
fg("dark_green")
selectCaptureGroup(2)
fg("green")
selectCaptureGroup(3)
fg("green")
resetFormat()
--raiseEvent("gotRoomExits", matches[2], matches[3])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00aa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sa tutaj (.+) widoczne wyjscia: (.+)\.$</string>
							<string>^Jest tutaj (.+) widoczne wyjscie: (.+)\.$</string>
							<string>^Jest tutaj (.+) widocznych wyjsc: (.+)\.$</string>
							<string>^(Jedyne) widoczne wyjscie to: (.+)\.$</string>
							<string>^(Zdaje ci sie) ze mozna by stad wyjsc gdzies na (.+)\.$</string>
							<string>^Zdaje ci sie ze (jedyne) wyjscie stad to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ciemno_brak_wyjsc</name>
						<script>selectCurrentLine()
fg("red")
resetFormat()
--raiseEvent("gotRoomExitsDark")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Wyjsc chyba bedziesz musial szukac po omacku.</string>
							<string>Zdaje ci sie ze nie ma stad wyjscia.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mowienie</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wiz</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>WEZWANIE</string>
						<string>odpowiada: </string>
						<string>Odpowiadasz</string>
						<string>przemawia do Ciebie</string>
						<string>Przemawiasz</string>
						<string>@</string>
						<string>&lt;</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>0</integer>
						<integer>2</integer>
						<integer>0</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>wezwania</name>
						<script>selectCaptureGroup(2)
fg("firebrick")
selectCaptureGroup(3)
fg("white")
resetFormat()

wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;red&gt;" .. matches[2] .. ": &lt;white&gt;" .. matches[3] .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^WEZWANIE ciebie od '(.+)': (.+)</string>
							<string>(.+) odpowiada: (.+)</string>
							<string>^WEZWANIE kogokolwiek od '(.+)': (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>odpowiadam</name>
						<script>komu = matches[2]
tekst = matches[3]

selectCaptureGroup(2)
fg("firebrick")
selectCaptureGroup(3)
fg("white")

resetFormat()

wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;red&gt;-&gt; " .. komu .. ": &lt;white&gt;" .. tekst .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Odpowiadasz (.+): (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>incoming_tell_short</name>
						<script>kto = matches[2]
tekst = matches[3]

selectCaptureGroup(2)
fg("firebrick")
selectCaptureGroup(3)
fg("white")

resetFormat()

wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;red&gt;" .. kto .. ": &lt;white&gt;" .. tekst .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.+) przemawia do Ciebie: (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tell</name>
						<script>selectCaptureGroup(2)
fg("firebrick")
selectCaptureGroup(3)
fg("white")
resetFormat()

wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;red&gt;-&gt; do " .. matches[2] .. ": &lt;white&gt;" .. matches[3] .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Przemawiasz do (.+?): (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>wizline</name>
						<script>--display(matches)
line = matches[2]
if(line == "@") then
	line = ""
else
	line = "[" .. line .. "] "
end
wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;light_gray&gt;" .. line .. "&lt;white&gt;" .. matches[3] .. ": " .. matches[4] .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(@) (.+): (.+)</string>
							<string>^&lt;(.+)&gt; (.+): (.+)</string>
							<string>^(@) (\w+) (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>incoming_tell</name>
					<script>--display(multimatches)
kto = multimatches[1][2]
tekst = multimatches[3][1]

selectString(tekst, 1)
fg("white")
resetFormat()

wizConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;red&gt;" .. kto .. ": &lt;white&gt;" .. tekst .. "&lt;reset&gt;\n")
flashChatContainerButton(wizContainer, true)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>3</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Nagle czujesz jak jakas magiczna sila wdziera sie do twojej glowy. Wewnatrz twego umyslu rozbrzmiewa (glos .+) : </string>
						<string>1</string>
						<string>(.+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>5</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mowa</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Mowisz</string>
						<string>Krzyczysz</string>
						<string>Wrzeszczysz</string>
						<string>mowi|dudni|szepce|spiewa|pomrukuje|piszczy|bulgocze|krzyczy|wrzeszczy|szepcze|mruczy|syczy|huczy|charczy|grzmi|nuci</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>mowienie</name>
						<script>kto = matches[2]
jak = matches[4]
cel = matches[6]
tekst = matches[7]
--display(matches)
selectCurrentLine()
fg("cyan")

if(cel == "ciebie") then
	selectCaptureGroup(6)
	fg("white")
end
chatConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;cyan&gt;" .. kto .. jak .. (cel ~= "" and (" do " .. cel) or ("")) .. ": &lt;white&gt;" .. tekst .. "&lt;reset&gt;\n")
flashChatContainerButton(chatContainer)
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.+) (mowi|dudni|szepce|spiewa|pomrukuje|piszczy|bulgocze|krzyczy|wrzeszczy|szepcze|mruczy|syczy|huczy|charczy|grzmi|nuci)()( do (.+)|): (.+)</string>
							<string>(.+) (mowi|dudni|szepce|spiewa|pomrukuje|piszczy|bulgocze|krzyczy|wrzeszczy|szepcze|mruczy|syczy|huczy|charczy|grzmi|nuci)( .*?|)( do (.+)|): (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ja mowie</name>
						<script>selectCurrentLine()
--display(matches)

co = matches[2]
jak = matches[3]
cel = matches[5]
tekst = matches[6]
if(co == "Szepczesz") then
	fg("blue")
else
	fg("cyan")
end
chatConsole:cecho("[" .. getTime(true, "HH:mm") .. "] &lt;cyan&gt;" .. co .. jak .. (cel ~= "" and (" do " .. cel) or ("")) .. ": &lt;white&gt;" .. tekst .. "&lt;reset&gt;\n")
flashChatContainerButton(chatContainer)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(Mowisz|Krzyczysz|Wrzeszczysz|Szepczesz)( .*?|)( do (.+)|): (.+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Stan</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>moje_cudze_hp</name>
					<script>--display(matches)
kto = #matches[3] &gt; 0 and matches[3] or matches[4]
poziom = matches[6]
ipoz, max = jakiPoziomOpisu(kondycje, poziom)
if(ipoz) then
  prefix("["..kondycjekolory[ipoz].."&lt;reset&gt;] ", cecho)
	selectCaptureGroup(6)
	setFgColor(255 - (ipoz * 255 / max), ipoz * 255 / max, 60);
end

resetFormat();</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^((Jestes)|(.+) jest) (fizycznie |)(na skraju smierci|ledwo zyw(y|a|e)|zmasakrowan(y|a|e)|ciezko rann(y|a|e)|w zlym stanie|w zlej kondycji|rann(y|a|e)|poranion(y|a|e)|pokiereszowan(y|a|e)|lekko rann(y|a|e)|poturbowan(y|a|e)|w dobrym stanie|w swietnej kondycji|w pelni zdrow(|a|e))[\.,]</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>moja_mana</name>
					<script>-- display(matches)
poziom = matches[3]
ipoz, max = jakiPoziomOpisu(mana, poziom)
if(ipoz) then
	selectCaptureGroup(3)
	setFgColor(255 - (ipoz * (255 / max)), ipoz * (255 / max), 60);
end

resetFormat();</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(^Jestes|, zas) mentalnie (u kresu sil|wykonczon(y|a)|wyczerpan(y|a)|w zlej kondycji|bardzo zmeczon(y|a)|zmeczon(y|a)|znuzon(y|a)|oslabion(y|a)|nadwyrezon(y|a)|lekko oslabion(y|a)|nadwatlon(y|a)|w pelni sil)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>panika</name>
					<script>--display(matches)
poziom = matches[2]
ipoz, max = jakiPoziomOpisu(panika, poziom)
if(ipoz) then
	selectCaptureGroup(2)
	setFgColor(255 - (ipoz * (255 / max)), ipoz * (255 / max), 60);
end

resetFormat();</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Czujesz sie (bardzo bezpiecznie|bezpiecznie|spokojnie|zaniepokojon(y|a)|nieswojo|niespokojnie|lekliwie|trwozliwie|strachliwie|nerwowo|przerazon(y|a)|histerycznie przerazon(y|a)|smiertelnie przerazon(y|a))[\. ]</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>picie_jedzenie</name>
					<script>--display(matches)
poziom_picie = matches[2]:lower()
poziom_jedzenie = matches[3]

ipoz, max = jakiPoziomOpisu(pragnienie, poziom_picie)
if(ipoz) then
	selectCaptureGroup(2)
	setFgColor(255 - (ipoz * 255 / max), ipoz * 255 / max, 60);
end
resetFormat();
ipoz, max = jakiPoziomOpisu(sytosc, poziom_jedzenie)
if(ipoz) then
	selectCaptureGroup(3)
	setFgColor(255 - (ipoz * 255 / max), ipoz * 255 / max, 60);
end
resetFormat();</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(Chce ci sie bardzo pic|Chce ci sie pic|Troche chce ci sie pic|Nie chce ci sie pic) i jestes (bardzo glodn(y|a)|glodn(y|a)|najedzon(y|a)|bardzo najedzon(y|a)).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zmeczenie</name>
					<script>--display(matches)
poziom = matches[2]
ipoz, max = jakiPoziomOpisu(zmeczenie, poziom)
if(ipoz) then
	selectCaptureGroup(2)
	setFgColor(255 - (ipoz * 255 / max), ipoz * 255 / max, 60);
end
resetFormat();</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> i jestes (w pelni wypoczet(y|a)|wypoczet(y|a)|troche zmeczon(y|a)|zmeczon(y|a)|bardzo zmeczon(y|a)|nieco wyczerpan(y|a)|wyczerpan(y|a)|bardzo wyczerpan(y|a)|wycienczon(y|a)|calkowicie wycienczon(y|a))[\., ]</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cechy</name>
					<script>function cechy_liczby(sila,zrecznosc,wytrzymalosc,inteligencja,madrosc,odwaga)
  local s = silaall[sila];
  local z = zrecznoscall[zrecznosc];
  local w = wytkaall[wytrzymalosc];
  local i = intall[inteligencja];
  local m = madroscall[madrosc];
  local o = odwagaall[odwaga]

cecho(sila.." &lt;yellow_green&gt;("..s.."), ")
cecho(zrecznosc.." &lt;yellow_green&gt;("..z.."), ")
cecho(wytrzymalosc.." &lt;yellow_green&gt;("..w.."), ")
cecho(inteligencja.." &lt;yellow_green&gt;("..i.."), ")
cecho(madrosc.." &lt;yellow_green&gt;(" ..m..") i ")
cecho(odwaga.." &lt;yellow_green&gt;("..o..").")
cechy_policzlvl(s,z,w,i,m,o)
end

function postepy_wyswietl(postep)
 cecho(postepyall[postep].." postepy, odkad pojawilas sie w tym swiecie.")
end

function cechy_policzlvl(sila,zrecznosc,wytrzymalosc,inteligencja,madrosc,odwaga)
  local level = sila+zrecznosc+wytrzymalosc+inteligencja+madrosc+odwaga
  local bojowe = sila+zrecznosc+wytrzymalosc
  local mentalne = inteligencja+madrosc
  local procentbojowych = bojowe/level*100
  local procentmentalnych = mentalne/level*100
  cecho("\n&lt;dark_goldenrod&gt;Masz "..level.."/312 cech. Bojowe: "..bojowe.." ("..math.floor(procentbojowych).."%), mentalne: "..mentalne.." ("..math.floor(procentmentalnych).."%).")
end


-- PO FUNKCJACH, WYWOLANIE

local sila = matches[2]
local zrecznosc = matches[3]
local wytrzymalosc = matches[4]
local inteligencja = matches[5]
local madrosc = matches[6]
local odwaga = matches[7]

selectString(matches[1], 1)
replace("Jestes ")
cechy_liczby(sila,zrecznosc,wytrzymalosc,inteligencja,madrosc,odwaga)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Jestes (slabiutka|slabowita|watla|cherlawa|slaba|krzepka|silna|mocna|tega|potezna|mocarna|tytaniczna|wszechmocna|slabiutka jak na legende|slabowita jak na legende|watla jak na legende|cherlawa jak na legende|slaba jak na legende|krzepka jak na legende|silna jak na legende|mocna jak na legende|tega jak na legende|potezna jak na legende|mocarna jak na legende|tytaniczna jak na legende|wszechmocna jak na legende|slabiutka jak na polboginie|slabowita jak na polboginie|watla jak na polboginie|cherlawa jak na polboginie|slaba jak na polboginie|krzepka jak na polboginie|silna jak na polboginie|mocna jak na polboginie|tega jak na polboginie|potezna jak na polboginie|mocarna jak na polboginie|tytaniczna jak na polboginie|wszechmocna jak na polboginie|slabiutka jak na boginie|slabowita jak na boginie|watla jak na boginie|cherlawa jak na boginie|slaba jak na boginie|krzepka jak na boginie|silna jak na boginie|mocna jak na boginie|tega jak na boginie|potezna jak na boginie|mocarna jak na boginie|tytaniczna jak na boginie|wszechmocna jak na boginie), (nieskoordynowana|niezdarna|niezreczna|niezgrabna|niewprawna|sprawna|zreczna|szybka|wprawna|zwinna|gibka|akrobatyczna|ekwilibrystyczna|nieskoordynowana jak na legende|niezdarna jak na legende|niezreczna jak na legende|niezgrabna jak na legende|niewprawna jak na legende|sprawna jak na legende|zreczna jak na legende|szybka jak na legende|wprawna jak na legende|zwinna jak na legende|gibka jak na legende|akrobatyczna jak na legende|ekwilibrystyczna jak na legende|nieskoordynowana jak na polboginie|niezdarna jak na polboginie|niezreczna jak na polboginie|niezgrabna jak na polboginie|niewprawna jak na polboginie|sprawna jak na polboginie|zreczna jak na polboginie|szybka jak na polboginie|wprawna jak na polboginie|zwinna jak na polboginie|gibka jak na polboginie|akrobatyczna jak na polboginie|ekwilibrystyczna jak na polboginie|nieskoordynowana jak na boginie|niezdarna jak na boginie|niezreczna jak na boginie|niezgrabna jak na boginie|niewprawna jak na boginie|sprawna jak na boginie|zreczna jak na boginie|szybka jak na boginie|wprawna jak na boginie|zwinna jak na boginie|gibka jak na boginie|akrobatyczna jak na boginie|ekwilibrystyczna jak na boginie), (delikatna|chorowita|rachityczna|mizerny|mizerna|krucha|dobrze zbudowany|dobrze zbudowana|wytrzymaly|wytrzymala|odporny|odporna|masywny|masywna|twardy|twarda|umiesniona|muskularna|atletyczna|delikatna jak na legende|chorowita jak na legende|rachityczna jak na legende|mizerna jak na legende|krucha jak na legende|dobrze zbudowana jak na legende|wytrzymala jak na legende|odporna jak na legende|masywna jak na legende|twarda jak na legende|umiesniona jak na legende|muskularna jak na legende|atletyczna jak na legende|delikatna jak na polboginie|chorowita jak na polboginie|rachityczna jak na polboginie|mizerna jak na polboginie|krucha jak na polboginie|dobrze zbudowana jak na polboginie|wytrzymala jak na polboginie|odporna jak na polboginie|masywna jak na polboginie|twarda jak na polboginie|umiesniona jak na polboginie|muskularna jak na polboginie|atletyczna jak na polboginie|delikatna jak na boginie|chorowita jak na boginie|rachityczna jak na boginie|mizerna jak na boginie|krucha jak na boginie|dobrze zbudowana jak na boginie|wytrzymala jak na boginie|odporna jak na boginie|masywna jak na boginie|twarda jak na boginie|umiesniona jak na boginie|muskularna jak na boginie|atletyczna jak na boginie), (bezmyslna|ciemna|tepa|nierozumna|ograniczona|rozgarnieta|pojetna|zmyslna|inteligentna|lotna|bystra|blyskotliwa|genialna|bezmyslna jak na legende|ciemna jak na legende|tepa jak na legende|nierozumna jak na legende|ograniczona jak na legende|rozgarnieta jak na legende|pojetna jak na legende|zmyslna jak na legende|inteligentna jak na legende|lotna jak na legende|bystra jak na legende|blyskotliwa jak na legende|genialna jak na legende|bezmyslna jak na polboginie|ciemna jak na polboginie|tepa jak na polboginie|nierozumna jak na polboginie|ograniczona jak na polboginie|rozgarnieta jak na polboginie|pojetna jak na polboginie|zmyslna jak na polboginie|inteligentna jak na polboginie|lotna jak na polboginie|bystra jak na polboginie|blyskotliwa jak na polboginie|genialna jak na polboginie|bezmyslna jak na boginie|ciemna jak na boginie|tepa jak na boginie|nierozumna jak na boginie|ograniczona jak na boginie|rozgarnieta jak na boginie|pojetna jak na boginie|zmyslna jak na boginie|inteligentna jak na boginie|lotna jak na boginie|bystra jak na boginie|blyskotliwa jak na boginie|genialna jak na boginie), (glupia|durna|zacofana|niemadra|niewyksztalcona|roztropna|wyksztalcona|rozsadna|logiczna|madra|uczona|oswiecona|wszechwiedzaca|glupia jak na legende|durna jak na legende|zacofana jak na legende|niemadra jak na legende|niewyksztalcona jak na legende|roztropna jak na legende|wyksztalcona jak na legende|rozsadna jak na legende|logiczna jak na legende|madra jak na legende|uczona jak na legende|oswiecona jak na legende|wszechwiedzaca jak na legende|glupia jak na polboginie|durna jak na polboginie|zacofana jak na polboginie|niemadra jak na polboginie|niewyksztalcona jak na polboginie|roztropna jak na polboginie|wyksztalcona jak na polboginie|rozsadna jak na polboginie|logiczna jak na polboginie|madra jak na polboginie|uczona jak na polboginie|oswiecona jak na polboginie|wszechwiedzaca jak na polboginie|glupia jak na boginie|durna jak na boginie|zacofana jak na boginie|niemadra jak na boginie|niewyksztalcona jak na boginie|roztropna jak na boginie|wyksztalcona jak na boginie|rozsadna jak na boginie|logiczna jak na boginie|madra jak na boginie|uczona jak na boginie|oswiecona jak na boginie|wszechwiedzaca jak na boginie) i (tchorzliwa|strachliwa|bojazliwa|lekliwa|niepewna|zdecydowana|niezachwiana|odwazna|dzielna|nieugieta|mezna|braterska|heroiczna|tchorzliwa jak na legende|strachliwa jak na legende|bojazliwa jak na legende|lekliwa jak na legende|niepewna jak na legende|zdecydowana jak na legende|niezachwiana jak na legende|odwazna jak na legende|dzielna jak na legende|nieugieta jak na legende|mezna jak na legende|braterska jak na legende|heroiczna jak na legende|tchorzliwa jak na polboginie|strachliwa jak na polboginie|bojazliwa jak na polboginie|lekliwa jak na polboginie|niepewna jak na polboginie|zdecydowana jak na polboginie|niezachwiana jak na polboginie|odwazna jak na polboginie|dzielna jak na polboginie|nieugieta jak na polboginie|mezna jak na polboginie|braterska jak na polboginie|heroiczna jak na polboginie|tchorzliwa jak na boginie|strachliwa jak na boginie|bojazliwa jak na boginie|lekliwa jak na boginie|niepewna jak na boginie|zdecydowana jak na boginie|niezachwiana jak na boginie|odwazna jak na boginie|dzielna jak na boginie|nieugieta jak na boginie|mezna jak na boginie|braterska jak na boginie|heroiczna jak na boginie).</string>
						<string>Jestes (slabiutki|slabowity|watly|cherlawy|slaby|krzepki|silny|mocny|tegi|potezny|mocarny|tytaniczny|wszechmocny|slabiutki jak na legende|slabowity jak na legende|watly jak na legende|cherlawy jak na legende|slaby jak na legende|krzepki jak na legende|silny jak na legende|mocny jak na legende|tegi jak na legende|potezny jak na legende|mocarny jak na legende|tytaniczny jak na legende|wszechmocny jak na legende|slabiutki jak na polboga|slabowity jak na polboga|watly jak na polboga|cherlawy jak na polboga|slaby jak na polboga|krzepki jak na polboga|silny jak na polboga|mocny jak na polboga|tegi jak na polboga|potezny jak na polboga|mocarny jak na polboga|tytaniczny jak na polboga|wszechmocny jak na polboga|slabiutki jak na boga|slabowity jak na boga|watly jak na boga|cherlawy jak na boga|slaby jak na boga|krzepka|silny jak na boga|mocny jak na boga|tegi jak na boga|potezny jak na boga|mocarny jak na boga|tytaniczny jak na boga|wszechmocny jak na boga), (nieskoordynowany|niezdarny|niezreczny|niezgrabny|niewprawny|sprawny|zreczny|szybki|wprawny|zwinny|gibki|akrobatyczny|ekwilibrystyczny|nieskoordynowany jak na legende|niezdarny jak na legende|niezreczny jak na legende|niezgrabny jak na legende|niewprawny jak na legende|sprawny jak na legende|zreczny jak na legende|szybki jak na legende|wprawny jak na legende|zwinny jak na legende|gibki jak na legende|akrobatyczny jak na legende|ekwilibrystyczny jak na legende|nieskoordynowany jak na polboga|niezdarny jak na polboga|niezreczny jak na polboga|niezgrabny jak na polboga|niewprawny jak na polboga|sprawny jak na polboga|zreczny jak na polboga|szybki jak na polboga|wprawny jak na polboga|zwinny jak na polboga|gibki jak na polboga|akrobatyczny jak na polboga|ekwilibrystyczny jak na polboga|nieskoordynowany jak na boga|niezdarny jak na boga|niezreczny jak na boga|niezgrabny jak na boga|niewprawny jak na boga|sprawny jak na boga|zreczny jak na boga|szybki jak na boga|wprawny jak na boga|zwinny jak na boga|gibki jak na boga|akrobatyczny jak na boga|ekwilibrystyczny jak na boga), (delikatny|chorowity|rachityczny|mizerny|kruchy|dobrze zbudowany|wytrzymaly|odporny|masywny|twardy|umiesniony|muskularny|atletyczny|delikatny jak na legende|chorowity jak na legende|rachityczny jak na legende|mizerny jak na legende|kruchy jak na legende|dobrze zbudowany jak na legende|wytrzymaly jak na legende|odporny jak na legende|masywny jak na legende|twardy jak na legende|umiesniony jak na legende|muskularny jak na legende|atletyczny jak na legende|delikatny jak na polboga|chorowity jak na polboga|rachityczny jak na polboga|mizerny jak na polboga|kruchy jak na polboga|dobrze zbudowany jak na polboga|wytrzymaly jak na polboga|odporny jak na polboga|masywny jak na polboga|twardy jak na polboga|umiesniony jak na polboga|muskularny jak na polboga|atletyczny jak na polboga|delikatny jak na boga|chorowity jak na boga|rachityczny jak na boga|mizerny jak na boga|kruchy jak na boga|dobrze zbudowany jak na boga|wytrzymaly jak na boga|odporny jak na boga|masywny jak na boga|twardy jak na boga|umiesniony jak na boga|muskularny jak na boga|atletyczny jak na boga), (bezmyslny|ciemny|tepy|nierozumny|ograniczony|rozgarniety|pojetny|zmyslny|inteligentny|lotny|bystry|blyskotliwy|genialny|bezmyslny jak na legende|ciemny jak na legende|tepy jak na legende|nierozumny jak na legende|ograniczony jak na legende|rozgarniety jak na legende|pojetny jak na legende|zmyslny jak na legende|inteligentny jak na legende|lotny jak na legende|bystry jak na legende|blyskotliwy jak na legende|genialny jak na legende|bezmyslny jak na polboga|ciemny jak na polboga|tepy jak na polboga|nierozumny jak na polboga|ograniczony jak na polboga|rozgarniety jak na polboga|pojetny jak na polboga|zmyslny jak na polboga|inteligentny jak na polboga|lotny jak na polboga|bystry jak na polboga|blyskotliwy jak na polboga|genialny jak na polboga|bezmyslny jak na boga|ciemny jak na boga|tepy jak na boga|nierozumny jak na boga|ograniczony jak na boga|rozgarniety jak na boga|pojetny jak na boga|zmyslny jak na boga|inteligentny jak na boga|lotny jak na boga|bystry jak na boga|blyskotliwy jak na boga|genialny jak na boga), (glupi|durny|zacofany|niemadry|niewyksztalcony|roztropny|wyksztalcony|rozsadny|logiczny|madry|uczony|oswiecony|wszechwiedzacy|glupi jak na legende|durny jak na legende|zacofany jak na legende|niemadry jak na legende|niewyksztalcony jak na legende|roztropny jak na legende|wyksztalcony jak na legende|rozsadny jak na legende|logiczny jak na legende|madry jak na legende|uczony jak na legende|oswiecony jak na legende|wszechwiedzacy jak na legende|glupi jak na polboga|durny jak na polboga|zacofany jak na polboga|niemadry jak na polboga|niewyksztalcony jak na polboga|roztropny jak na polboga|wyksztalcony jak na polboga|rozsadny jak na polboga|logiczny jak na polboga|madry jak na polboga|uczony jak na polboga|oswiecony jak na polboga|wszechwiedzacy jak na polboga|glupi jak na boga|durny jak na boga|zacofany jak na boga|niemadry jak na boga|niewyksztalcony jak na boga|roztropny jak na boga|wyksztalcony jak na boga|rozsadny jak na boga|logiczny jak na boga|madry jak na boga|uczony jak na boga|oswiecony jak na boga|wszechwiedzacy jak na boga) i (tchorzliwy|strachliwy|bojazliwy|lekliwy|niepewny|zdecydowany|niezachwiany|odwazny|dzielny|nieugiety|mezny|braterski|heroiczny|tchorzliwy jak na legende|strachliwy jak na legende|bojazliwy jak na legende|lekliwy jak na legende|niepewny jak na legende|zdecydowany jak na legende|niezachwiany jak na legende|odwazny jak na legende|dzielny jak na legende|nieugiety jak na legende|mezny jak na legende|braterski jak na legende|heroiczny jak na legende|tchorzliwy jak na polboga|strachliwy jak na polboga|bojazliwy jak na polboga|lekliwy jak na polboga|niepewny jak na polboga|zdecydowany jak na polboga|niezachwiany jak na polboga|odwazny jak na polboga|dzielny jak na polboga|nieugiety jak na polboga|mezny jak na polboga|braterski jak na polboga|heroiczny jak na polboga|tchorzliwy jak na boga|strachliwy jak na boga|bojazliwy jak na boga|lekliwy jak na boga|niepewny jak na boga|zdecydowany jak na boga|niezachwiany jak na boga|odwazny jak na boga|dzielny jak na boga|nieugiety jak na boga|mezny jak na boga|braterski jak na boga|heroiczny jak na boga).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>walka</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zgony</name>
					<script>selectCurrentLine()
fg("red")
selectCaptureGroup(4)
fg("white")

resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^()Zabil(a|e|o)s (.+).</string>
						<string>(.+) zabil(|a|o) (.+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ataki</name>
					<script>selectCurrentLine()
fg("red")
selectCaptureGroup(2)
fg("white")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^()Atakujesz (.+)$</string>
						<string>(.+) atakuje (.+)(.|!)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>bez_obrazen</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>unika</string>
						<string>paruje</string>
						<string>zastawia</string>
						<string>zatrzymuje</string>
						<string>nie udaje sie trafic</string>
						<string>udaje sie uniknac</string>
						<string>wyparowany</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>uniki</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unika</string>
							<string>uniknac</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>uniki_moje</name>
							<script>czym_kogo = matches[4]

local s = czym_kogo:split(" ")
for i = 2, #s do
	if(s[i]:sub(-1) ~= s[1]:sub(-1)) then
		czym = table.concat(s, " ", 1, i - 1)
		kogo = table.concat(s, " ", i)
		break
	end
end

selectString(kogo, 1)
fg("white")

selectString("unikasz", 1)
fg("green")

deselect()
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Powolnie|Niezgrabnie|Nieporadnie|Szczesliwie|Niezrecznie|Niemrawo|Wprawnie|Pewnie|Plynnie|Prosto|Zwinnie|Zrecznie|Pewnie|Zrecznie|Dynamicznie|Plynnie|Zgrabnie|Blyskawicznie|Mistrzowsko|Perfekcyjnie) unikasz (ciecia|pchniecia|uderzenia) (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>uniki_moje_ani</name>
							<script>selectCaptureGroup(2)
fg("white")

selectString("uniknac", 1)
fg("PaleGreen")

deselect()
resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) probuje cie trafic (.+), lecz tobie udaje sie uniknac tego ciosu.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>uniki_czyjes</name>
							<script>kto = matches[2]
czyjego = matches[4]
czym = matches[6]

selectCaptureGroup(2)
fg("white")

selectString("unika", 1)
fg("gold")

deselect()
resetFormat()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) (powolnie|niezgrabnie|nieporadnie|szczesliwie|niezrecznie|niemrawo|wprawnie|pewnie|plynnie|prosto|zwinnie|zrecznie|pewnie|zrecznie|dynamicznie|plynnie|zgrabnie|blyskawicznie|mistrzowsko|perfekcyjnie) unika (twojego) (ciecia|pchniecia|uderzenia) (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>uniki_ktos_kogos</name>
							<script>kto = matches[2]
czym_czyjego = matches[4]

selectCaptureGroup(2)
fg("white")

selectString("unika", 1)
fg("gold")

deselect()
resetFormat()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) (powolnie|niezgrabnie|nieporadnie|szczesliwie|niezrecznie|niemrawo|wprawnie|pewnie|plynnie|prosto|zwinnie|zrecznie|pewnie|zrecznie|dynamicznie|plynnie|zgrabnie|blyskawicznie|mistrzowsko|perfekcyjnie) unika (ciecia|pchniecia|uderzenia) (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>parowanie</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>paruje</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>parowania_moje</name>
							<script>kogo = matches[2]
czym = matches[4]
czym_paruje = matches[7]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(6)
fg("green")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) wyprowadza (uderzenie|ciecie|pchniecie) (.+), lecz (szczesliwie|niemrawo|z trudem|z wysilkiem|z mozolem|pewnie|zgrabnie|umiejetnie|wprawnie|zrecznie|zwinnie|szybko|perfekcyjnie) (parujesz) je (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>parowania_czyjes</name>
							<script>czym = matches[3]
kogo = matches[4]
czym_paruje = matches[7]

selectCaptureGroup(4)
fg("white")
selectCaptureGroup(6)
fg("gold")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Wyprowadzasz (uderzenie|ciecie|pchniecie) (.+), lecz (.+) (szczesliwie|niemrawo|z trudem|z wysilkiem|z mozolem|pewnie|zgrabnie|umiejetnie|wprawnie|zrecznie|zwinnie|szybko|perfekcyjnie) (paruje) je (.+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tarcza</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>zastawia</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tarcza_moja</name>
							<script>kto = matches[2]
czym = matches[4]
czym_zastawia = matches[6]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(5)
fg("green")
selectCaptureGroup(6)
fg("white")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) wyprowadza (ciecie|pchniecie|uderzenie) (.+), lecz (zastawiasz sie) (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tarcza_czyjas</name>
							<script>kto = matches[2]
kogo = matches[5]
czym = matches[4]
czym_zastawia = matches[7]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(6)
fg("gold")
selectCaptureGroup(7)
fg("white")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) wyprowadza (ciecie|pchniecie|uderzenie) (.+), lecz (.+) (zastawia sie) (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tarcza_ja_kogos</name>
							<script>kogo = matches[4]
czym = matches[5]
czym_zastawia = matches[6]

selectCaptureGroup(4)
fg("white")
selectCaptureGroup(5)
fg("gold")
selectCaptureGroup(6)
fg("white")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(Uderzasz|Tniesz|Pchasz|Wyprowadzasz ciecie|pchniecie|uderzenie) (.+), lecz (.+) (zastawia sie) (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>zbroja</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>zatrzymuje</string>
							<string>wyparowany</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>zbroja_moja</name>
							<script>kto = matches[2]
czym = matches[4]
zbroja = matches[11]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(8)
fg("powder_blue")
selectCaptureGroup(10)
fg("green")
selectCaptureGroup(11)
fg("white")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) (uderza|tnie|kluje) cie (.+) w (.+), lecz (jego|jej) (bron|cios) ((przebijajac|zesliznawszy sie) .+ |)(zatrzymuje sie) na twojej (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>zbroja_czyjas</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) (uderza|tnie|kluje) (.+) w (.+), lecz (twoj|jeg|jego) cios (zatrzymuje sie) na (jego|jej) (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>zbroja_czyjas_ani</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) trafia (.+) w (.+), lecz caly impet uderzenia (wyparowany) zostaje przez (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>zbroja_moja_ani</name>
							<script>kto = matches[2]
czym = matches[3]
zbroja = matches[6]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(3)
fg("powder_blue")
selectCaptureGroup(5)
fg("green")
selectCaptureGroup(6)
fg("white")

resetFormat()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.+) trafia cie (.+) w (.+), lecz caly impet uderzenia (wyparowany) zostaje przez (.+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>pudlo</name>
						<script>selectCaptureGroup(2)
fg("white")
selectString("nie udaje sie trafic", 1)
fg("PaleGreen")

resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.+) nie udaje sie trafic</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ciosy_obrazenia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> trafiajac w </string>
						<string> trafiajac (go|ja|je|jego) w </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ciosy_hum</name>
						<script>--display(matches)
local kto = #matches[2]
local rana_kogo_czym = matches[4]
local gdzie = matches[6]
local kogo, czym

local b, e, rana = jakaPozycjaOpisu(opisy_rany, rana_kogo_czym)
if(rana_kogo_czym:sub(e + 1, e + 4) == "cie") then
	kogo = "cie"
	czym = kogo_czym:sub(e + 6)
else
	local kogo_czym = rana_kogo_czym:sub(e + 1)
	czym = ""
	local s = kogo_czym:split(" ")
	for i = 2, #s do
		if(s[i]:sub(-1) ~= s[1]:sub(-1)) then
			kogo = table.concat(s, " ", 1, i)
			czym = table.concat(s, " ", i + 1, #s)
			break
		end
	end
--	for i = #s - 1, 1, -1 do
--		if(s[i]:sub(-1) ~= s[#s]:sub(-1)) then
--			kogo = table.concat(s, " ", 1, i)
--			czym = table.concat(s, " ", i + 1)
--			break
--		end
--	end
end

--echo(kogo .. " -&gt; " .. czym .. "\n")
selectString(kogo, 1)
if(kogo == "cie") then
	bg("red")
else
	fg("white")
end

ipoz, max = jakiPoziomOpisu(opisy_rany, rana)
if(ipoz) then
	selectString(rana, 1)
	setFgColor(255, 255 - (ipoz * 255 / max), 200 - (ipoz * 200 / max));
end

deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.+) (szczesliwie|ledwo|niezdarnie|z trudem|z wysilkiem|udanie|wprawnie|prosto|gladko|umiejetnie|z latwoscia|bez trudu|bez problemu|z latwoscia|dokladnie|perfekcyjnie) (.+? (cie |).+) trafiajac w (.+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>moje</name>
						<script>--display(matches)
--to by sie przydalo jakos ugenerycznic...
local kto = "Ja"
local rana = matches[4]
local kogo_czym = matches[5]
local gdzie = matches[6]
local kogo, czym

local s = kogo_czym:split(" ")
for i = 1, #s do
	if(s[i]:sub(-1) ~= s[1]:sub(-1) or s[i+1] == 'prawa' or s[i+1] == 'lewa') then
		kogo = table.concat(s, " ", 1, i)
		czym = table.concat(s, " ", i + 1, #s)
		break
	end
end

--echo(kogo .. " -&gt; " .. czym .. "\n")
selectString(kogo, 1)
fg("white")

ipoz, max = jakiPoziomOpisu(opisy_rany, rana)
if(ipoz) then
	selectCaptureGroup(3)
	setFgColor(255, 255 - (ipoz * 255 / max), 200 - (ipoz * 200 / max));
end

deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(Szczesliwie|Ledwo|Niezdarnie|Z trudem|Z wysilkiem|Udanie|Wprawnie|Prosto|Gladko|Umiejetnie|Z latwoscia|Bez trudu|Bez problemu|Z latwoscia|Dokladnie|Perfekcyjnie) ((.+)sz) (.+) trafiajac w (.+).$</string>
							<string>^()((Nacina|Rozcina|Tnie|Siecze|Rabie|Rznie)sz) (.+) (.+), trafiajac (go|ja|je|jego) w (.+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ciosy_ani</name>
						<script>local rana = matches[3]
ipoz, max = jakiPoziomOpisu(opisy_rany, rana)
if(ipoz) then
	selectString(rana, 1)
	setFgColor(255, 255 - (ipoz * 255 / max), 200 - (ipoz * 200 / max));
end

deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.+) (ledwo muska|lekko rani|rani|powaznie rani|bardzo ciezko rani|potwornie rani|masakruje) (.+), trafiajac (cie|go|ja|je) w (.+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>opis_walki</name>
					<script>selectString(matches[1], 1)
fg("red")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Walczy z </string>
						<string>Walczysz z </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>spece</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>szermierze</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>markuje cios w kierunku</string>
							<string>probuje piruetem wyminac</string>
							<string>wirujac w zgrabnym piruecie przepuszcza cios</string>
							<string>perfekcyjnie wykorzystujac przewage wyszkolenia w fechtunku zwodniczo mlynkuje</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pudlo</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#aaffff</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>lecz on uchyla sie przed tym ciosem.</string>
								<string>ale mu sie to nie udaje</string>
								<string>Ostrze mija jednak cel o centymetry</string>
								<string>uchyla sie przed tym ciosem</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>obrazenia</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ffaa7f</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(spora rane|przedziurawione na wylot cialo)</string>
								<string>zauwazalna rane</string>
								<string>zostawiajac po sobie gleboka rane</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bractwo_switu</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ciecie</string>
							<string>tniesz</string>
							<string>rownowag</string>
							<string>Spokojnie...</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ciecie</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>ciecie</string>
								<string>tnie</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>trafienie</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>trafia</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>zbroja</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#aaffff</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>(.*) cieciem z (gory|dolu|boku) trafia(sz|) .* w .*, lecz (twoj|twoja|jego|jej) .* niweluje sile ciosu\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>skora</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#aaffff</mFgColor>
									<mBgColor>#000000</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>(.*) cieciem z (gory|dolu|boku) trafia(sz|) .* w .*, lecz nie wyrzadzasz (jemu|jej) zadnej krzywdy\.</string>
										<string>(.*) cieciem z (gory|dolu|boku) trafia(sz|) .* w .*, lecz (jego|jej) cios nie wyrzadza ci zadnej szkody\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>obrazenia</name>
									<script>--display(matches)
bs_sily = {"delikatnym", "lekkim", "niezbyt silnym", "silnym", "mocnym", "poteznym", "niewiarygodnie poteznym"}
bs_rany = {"nikly slad|nieznaczny odprysk kostny|nieznaczny uszczerbek|nikla ranke",
			"niewielk(i|a) (slad|odprysk kostny|uszczerbek|rane)",
			"zauwazaln(y|a) (slad|odprysk kosci|uszczerbek|rane)",
			"spor(y|e|a) (slad|pekniecie|uszczerbek|rane)",
			"paskudn(y|e|a) (slad|polamane kosci|uszczerbek|rane)",
			"glebok(i|a) (slad|dziure|rane)|mocno i gleboko polamane kosci",
			"bruzde przedzielajaca niemalze na pol|gruchoczac i lamiac kosci|prawie smiertelny w skutkach brak|prawie smiertelna rane, tnac (wysuszone miesnie|miesnie i pryskajac krwia)",
			"bruzde na wylot|bezksztaltna mase polamanych kosci|zmasakrowane szczatki|straszliwie zmasakrowane cialo, ktore pada na ziemie( w kaluzy wlasnej krwi|)"
}

local ipoz, max, opis, sila, rana

for a = 0,#matches-1,5 do
	-- kolor i styl dla calej linii
	selectCaptureGroup(a + 1)
	fg("PaleTurquoise")--; setBold(true)
	-- dalej osobne kolorki dla sily ciosu i poziomu zadanej rany
	sila = matches[a + 3]
	rana = matches[a + 5]
	selectCaptureGroup(a + 3)
	ipoz, max = jakiPoziomOpisu(bs_sily, sila:lower())
	setFgColor(255, 255 - (ipoz * 255 / max), 200 - (ipoz * 200 / max));
	--replace(matches[a + 3] .. "(" .. ipoz .. ")")
	selectCaptureGroup(a + 5)
	ipoz, max = jakiPoziomOpisu(bs_rany, rana:lower())
	setFgColor(255, 255 - (ipoz * 255 / max), 200 - (ipoz * 200 / max));
	--replace(matches[a + 5] .. "(" .. ipoz .. ")")
end

deselect()
resetFormat()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>(Kolejnym |^[&gt; ]*)([^.]+?) cieciem z (gory|boku|dolu) trafiasz .*? w .*?, pozostawiajac ([^.]+?)\.</string>
										<string>(Kolejnym |^[&gt; ]*)([^.]+?) cieciem z (gory|boku|dolu) .*? trafia cie w .*?, pozostawiajac ([^.]+?)\.</string>
										<string>(Kolejnym |^[&gt; ]*)([^.]+?) cieciem z (gory|boku|dolu) .*? trafia .*? w .*?, pozostawiajac ([^.]+?)\.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>pudlo</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#aaffff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(.*? (wyprowadza|wykonuje)|Wyprowadzasz|Wykonujesz) ciecie .*? w (.*?), lecz ((on|ona|ono) uchyla|uchylasz) sie przed tym ciosem\.</string>
									<string>Plynnie kontynuujac ruch[,] tnie(sz|) .* w (.*), lecz ((on|ona|ono) uchyla|uchylasz) sie przed tym ciosem\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>mlynek</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>poziomym cieciem z obrotu</string>
								<string>Z furkotem brutalnie rozcinanego powietrza</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jest_rownowaga</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55aa00</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Czujesz, ze odzyskujesz rytm i rownowage.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>brak_rownowagi</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#aa5500</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Jeszcze nie odzyskal(es|as|os) rownowagi\.)$</string>
								<string>Spokojnie... walka dopiero sie zaczela, musisz chwilke poczekac aby poznac swojego przeciwnika.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Druzyna</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>druzynie</string>
					<string>Druzyne</string>
					<string>druzyny</string>
					<string>druzyne</string>
					<string>przedstawia sie</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>2</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>zaprasza</name>
					<script>selectCurrentLine()
fg("white")
selectCaptureGroup(2)
fg("light_blue")
selectCaptureGroup(3)
fg("light_blue")

resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) zaprasza (.+) do swojej druzyny\.$</string>
						<string>^()Zapraszasz (.+) do druzyny\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>dolacza</name>
					<script>local kto = matches[2]
local do_kogo = matches[3]

selectCurrentLine()
fg("white")

selectCaptureGroup(2)
fg("light_blue")

selectCaptureGroup(3)
fg("light_blue")

resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) dolacza do druzyny (.+)\.$</string>
						<string>(.+) dolacza do (twojej) druzyny\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ja dolaczam</name>
					<script>local kto = "Ja"
local do_kogo = matches[2]

selectCurrentLine()
fg("white")

selectCaptureGroup(2)
fg("light_blue")

resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Dolaczasz do druzyny (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>porzucanie</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Porzucasz swoja druzyne.</string>
						<string>(.+) porzuca twoja druzyne\.$</string>
						<string>(.+) porzuca druzyne (.+)\.$</string>
						<string>Porzucasz druzyne, ktorej przewodziles.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>brak_druzyny</name>
					<script>removeTeam()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Nie jestes aktualnie w zadnej druzynie.</string>
						<string>Nie jestes czlonkiem zadnej druzyny.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>opis_druzyny</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Przewodzisz druzynie, </string>
						<string>Druzyne prowadzi</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>dowodca</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00aa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Przewodzisz druzynie, </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>opis_szereg_wspolne_i_dalsze</name>
							<script>--display(matches)
local ile = #matches / 6

for i = 0, ile - 1 do
	local szereg = szeregi[matches[3 + 6 * i]]
	local czy_ja = #matches[4 + 6 * i] &gt; 0
	local kto = matches[6 + 6 * i]:gsub(", ", "|"):gsub(" i ", "|"):split("|")
	if(czy_ja) then table.insert(kto, "Ja") end

	selectCaptureGroup(3 + 6 * i)
	fg("white")
	selectCaptureGroup(6 + 6 * i)
	fg("light_blue")
	resetFormat()

	--echo("Szereg: " .. szereg .. ": " .. table.concat(kto, ", ") .. "\n")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(W|w ktorej w) (.+?) szeregu(, oprocz ciebie,|) (stoi|stoja) (.+?)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>opis_szereg_samotnie</name>
							<script>local szereg = szeregi[matches[3]]
local kto = {"Ja"}

selectCaptureGroup(2)
fg("light_blue")
selectCaptureGroup(3)
fg("white")

resetFormat()

--echo("Szereg: " .. szereg .. ": " .. table.concat(kto, ", ") .. "\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>stojac (samotnie) w (.+?) szeregu\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>czlonek</name>
						<script>--display(matches)
prowadzacy = matches[2]
local kto = matches[6]
local szereg = szeregi[matches[7]]

selectCaptureGroup(2)
fg("white")
selectCaptureGroup(7)
fg("white")
selectCaptureGroup(6)
fg("light_blue")

resetFormat()

--echo("\nSzereg: " .. szereg .. ": " .. table.concat(kto, ", ") .. "\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Druzyne prowadzi (.+?) stojac(y|a|e) (samotnie()|razem z (.+?)) w (.+?) szeregu\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>moj_szereg</name>
							<script>--display(matches)

local szereg = szeregi[matches[7]]
local sam_stoje = #matches[6] &gt; 0
local kto = sam_stoje and matches[6] or matches[4]

--echo("\nSzereg: " .. szereg .. ": " .. table.concat(kto, ", ") .. "\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Stoisz(, razem (z|ze) (.+?),| ()(samotnie)) w (.+?) szeregu\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>szereg_nie_moj</name>
							<script>local szereg = szeregi[matches[2]]
local kto = matches[4]

local kto = kto:gsub(", ", "|"):gsub(" i ", "|"):split("|")

--echo("\nSzereg: " .. szereg .. ": " .. table.concat(kto, ", ") .. "\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>W (.+?) szeregu sto(i|ja) (.+?)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>przejscia</name>
					<script>selectCurrentLine()
fg("white")

selectCaptureGroup(2)
fg("light_blue")

selectCaptureGroup(3)
fg("light_blue")

selectCaptureGroup(4)
fg("light_blue")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) przechodzi do (.+) szeregu druzyny, chowajac sie za (.+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>rozwiazuje</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) rozwiazuje druzyne.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>przedstawia</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) przedstawia sie jako:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>magia</name>
				<script>
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>koncentr</string>
					<string>zaklec</string>
					<string>czar</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>koncentracja</name>
					<script>selectCurrentLine()
fg("white")

deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) zaczyna miarowo oddychac, czujesz bijaca od (niego|niej) fale spokoju i gromadzacej sie mocy.$</string>
						<string>Oddalasz sie myslami, pograzajac umysl w glebokiej koncentracji.</string>
						<string>^Miarowo oddychasz, a fala spokoju zalewa twe mysli. Czujesz narastajaca w sobie moc, twoj umysl jest wyciszony a ty jestes w pelni skoncentrowan(y|a|e). Nic nie rozprasza juz twej uwagi.$</string>
						<string>(.+) odcina swoj umysl od wszelkich bodzcow i pograza sie w glebokiej modlitwie.$</string>
						<string>koncentruje sie i zaczyna powtarzac jakas cicha mantre.</string>
						<string>(.+) koncentruje swoje moce\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>oddychasz</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55aaff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Nic nie rozprasza juz twej uwagi.</string>
							<string>Osiagasz stan naboznego skupienia niezbedny do odprawienia modlitwy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>brak_koncentracji</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffa200</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Nie jestes skoncentrowan(y|a|e).</string>
						<string>Nie udaje ci sie skoncentrowac nad zakleciem.</string>
						<string>Nie udaje ci sie dostatecznie skoncentrowac.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wyciszony</name>
					<script>selectCurrentLine()
fg("forest_green")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Wyciszasz umysl. Mozesz sie ponownie skoncentrowac.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>cooldown</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffa200</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Ochlon, zanim ponownie sie skoncentrujesz.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>porazka_czarowania</name>
					<script>selectCurrentLine()
fg("maroon")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Probujesz opanowac zaklecie, ale masz zbyt male umiejetnosci, by temu sprostac.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>mozliwy_ponownie</name>
					<script>selectCurrentLine()
fg("olive_drab")
selectCaptureGroup(2)
fg("white")
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Mozesz sie ponownie skoncentrowac nad zakleciem (.+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>dekoncentracja</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffa200</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.+) dekoncentruje sie.$</string>
						<string>Dekoncentrujesz sie.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>poczatek_czarowania</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aaff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Bierzesz gleboki oddech, probujac skoncentrowac sie i wyciszyc swoj umysl.</string>
						<string>unosi do gory rece i koncentruje sie nad modlitwa.</string>
						<string>Unosisz do gory rece i koncentrujesz sie nad modlitwa.</string>
						<string>bierze gleboki oddech, probujac skoncentrowac sie i wyciszyc swoj umysl.</string>
						<string>inkantuje slowa zaklecia.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Skrzynie</name>
				<script>selectString(matches[1], 1);
fg("dodger_blue");
resetFormat();</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^(.+) zawiera(ja|) nastepujace (bronie|zbroje|jedzenie|przedmioty|ziola|pojemniki|mikstury|kosztownosci): </string>
					<string>^(Ponadto|Dodatkowo w srodku|Oprocz tego wewnatrz|We wnetrzu) (zauwazasz|dostrzegasz|widzisz|spostrzegasz tez) (bronie|zbroje|jedzenie|przedmioty|ziola|pojemniki|mikstury|kosztownosci): </string>
					<string>^(Dodatkowo polozone|Ponadto na (nim|niej)|Oprocz tego na wierzchu) (zauwazasz|dostrzegasz|widzisz|spostrzegasz) (bronie|zbroje|jedzenie|przedmioty|ziola|pojemniki|mikstury|kosztownosci): </string>
					<string>^Na (.+) leza nastepujace (bronie|zbroje|jedzenie|przedmioty|ziola|pojemniki|mikstury|kosztownosci): </string>
					<string>^We wnetrzu spostrzegasz (bronie|zbroje|jedzenie|przedmioty|ziola|pojemniki|mikstury|kosztownosci): </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ekwipunek</name>
				<script>selectString(matches[1], 1);
fg("dodger_blue");
resetFormat();</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Masz na sobie</string>
					<string>Masz przy sobie</string>
					<string>^Trzyma(sz|) (.+) w (lewej|prawej) rece.</string>
					<string>^Trzyma(sz|) oburacz</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>warlock</name>
			<script></script>
			<command></command>
			<packageName>warlock</packageName>
			<time></time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>AntiIIdle</name>
				<script>if(getIdleTime() &gt; 600) then
	send("!", false)
end
</script>
				<command></command>
				<packageName></packageName>
				<time>00:20:00.000</time>
			</Timer>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<script></script>
			<command></command>
			<packageName>deleteOldProfiles</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>delete old profiles</name>
				<script>deleteOldProfiles(matches[3], matches[2]=="maps")

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
				<command></command>
				<packageName></packageName>
				<regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>run-lua-code-v4</name>
			<script></script>
			<command></command>
			<packageName>run-lua-code-v4</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>run lua code</name>
				<script>local f, e = loadstring("return "..matches[2])
if not f then
  f, e = assert(loadstring(matches[2]))
end

local r =
  function(...)
    if not table.is_empty({...}) then
      display(...)
    end
  end
r(f())</script>
				<command></command>
				<packageName></packageName>
				<regex>^lua (.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>send-text-to-all-games</name>
			<script></script>
			<command></command>
			<packageName>send-text-to-all-games</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Send text to all games with :</name>
				<script>-- prefix with : to send text or run an alias in all open profiles that have this script installed
-- for example - :hi or :follow bob
local matchedText = matches[2]
expandAlias(matchedText)
raiseGlobalEvent("sysSendAllProfiles", matchedText)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^:(.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>echo</name>
			<script></script>
			<command></command>
			<packageName>echo</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>`echo</name>
				<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>`echo (.+)</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>warlock</name>
			<script></script>
			<command></command>
			<packageName>warlock</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>aliasy</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>eval</name>
					<script>local f, e = loadstring(matches[2]);
if(f ~= nil) then
	local a, b, c = f();
	if a ~= nil then echo ("A:  "); display(a, nil, 1); end
	if b ~= nil then echo ("B:  "); display(b, nil, 1); end
	if c ~= nil then echo ("C:  "); display(c, nil, 1); end
end
if e ~= nil then echo ("Er: "); display(e, nil, 1); end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^/eval (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>version</name>
					<script>echo("Skrypty wersja " .. scriptsVersion .. "\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^/version$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>paste</name>
					<script>tempTimer(0, [[ start_paste("]] .. matches[2] .. [[") ]])</script>
					<command></command>
					<packageName></packageName>
					<regex>^/paste (.+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>quit</name>
					<script>os.exit()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/quit$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>help</name>
					<script>displayHelp()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/(help|pomoc)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>zabici</name>
					<script>--display(zabici)
if(table.size(zabici) == 0) then
	echo("Dzis nikt jeszcze nikogo nie zabil. Przynajmniej niczego takiego nie widzielismy.\n")
	return
end
for i, z in pairs(zabici) do
	local suma = 0
	echo("** " .. i .. ":\n")
	for ip, ii in pairs(z) do
		echo(string.format(" %20s: %3d\n", ip, ii))
		suma = suma + ii
	end
	echo("- Razem: " .. suma .. "\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^/zabici$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>debug</name>
					<script>local temat = matches[3] or "lista"

if(temat == "lista") then
	echo("/debug (stats|...)\n")
	return
end

if(temat == "stats") then
	for k, w in pairs(containerDruzyna.windowList) do
		echo("Row: " .. w.name .. "\n")
		for kk, ww in pairs(w.windowList) do
			echo("    Stats: " .. ww.name .. " id: " .. ww.id .. " imie: " .. ww.imie .. "\n")
		end
	end
	return
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^/debug($| (.*))</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>del_enemy</name>
					<script>hideEnemyStatsFor(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^/del_enemy (.+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>akcja</name>
					<script>local args = matches[3]
local co, cmd

if(args == nil) then
	echo("    Uzycie: /akcja (przeciwnik|druzyna|inni) (komenda, w miejsce % podstawiany jest cel)\n")
	return
end

local as = args:split(" ")
co = as[1]

if(akcja[co] == nil) then
	echo("    Nieprawidlowa wartosc. Dopuszczalne: ")
	for k, v in pairs(akcja) do echo(k .. " ") end
	echo("\n")
	return
end

cmd = args:sub(#co + 2)
if(cmd:find("%%") == nil) then
	cmd = cmd .. " %"
end

if(cmd == nil or #cmd == 0) then
	echo("    Aktualna akcja dla " .. co .. " to: " .. (akcja[co] or "brak") .. "\n")
	return
end
if(cmd == "-") then
	akcja[co] = ""
	echo("    Akcja dla " .. co .. " usunieta.\n")
else
	akcja[co] = cmd
	echo("    Akcja dla " .. co .. " ustawiona na: " .. cmd .. "\n")
end
remember("akcja")</script>
					<command></command>
					<packageName></packageName>
					<regex>^/akcja( (.+)|$)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kolory</name>
					<script>showColors()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/kolory$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>statsfix</name>
					<script>cleanupStatLeftovers()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/statsfix$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Wyjscia</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>roomInfo</name>
					<script>--/roomInfo
echo("Obszar: " .. getRoomAreaName(currentRoom.areaId) .. "(" .. currentRoom.areaId .. "), lokacji: " .. table.size(getAreaRooms(currentRoom.areaId)) .. "\n")
echo("Nazwa lokacji: " .. getRoomName(currentRoom.id) .. "(" .. currentRoom.id .. ")\n")
local x,y,z = getRoomCoordinates(currentRoom.id)
echo("Wspolrzedne: " .. x .. ", " .. y .. ", " .. z .. "\n")
echo("Rodzaj lokacji: " .. env[getRoomEnv(currentRoom.id) - ENV_START_NUM].type .. "\n")
local serv = getRoomUserData(currentRoom.id, "service")
if(serv ~= nil) then
   serv = yajl.to_value(serv)
   if(serv.type ~= nil) then
		echo("Usluga na lokacji: " .. serv.type .. "\n")
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^/roomInfo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>clearArea</name>
					<script>local areaID = getRoomArea(currentRoom.id)
echo("Usuwam aktualny obszar: " .. getRoomAreaName(areaID) .. " (id " .. areaID .. ")\n")
deleteArea(areaID)

makeMapRoom(currentRoom.room)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^/clearArea$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>clearMap</name>
					<script>clearMap()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/clearMap$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>areas</name>
					<script>-- /areas
local areas = getAreaTableSwap()
for id, area in pairs(areas) do
	local arealoc = getAreaRooms(id) 
	echo("Area: " .. area .. ", id: " .. id .. ", lokacji: " .. table.size(arealoc) .. " - ")
	echoLink("[usun obszar]", "deleteArea(" .. id .. ")", "Usuwa caly obszar " .. area .. " z mapy")
   echo("\n")
end

</script>
					<command></command>
					<packageName></packageName>
					<regex>^/areas$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>drzwi</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>addDoor</name>
						<script>--Wyjscia::drzwi::addDoor
setDoor(currentRoom.id, matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^/drzwi ([a-z]+) (0|1|2|3)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Kontenery</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>cont_reset</name>
					<script>function deleteSaveFile(cont)
  --display(cont.name)
  cont:deleteSaveFile()
end

Adjustable.Container:doAll(deleteSaveFile)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^/cont_reset$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cont_show_all</name>
					<script>Adjustable.Container:showAll()</script>
					<command></command>
					<packageName></packageName>
					<regex>^/cont_show_all$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>warlock</name>
			<packageName>warlock</packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="yes" useCustomLayout="no">
				<name>new toolbar</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>0</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>7274605</sizeX>
				<sizeY>7929975</sizeY>
				<buttonColumn>4</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="yes" useCustomLayout="no">
					<name>new button</name>
					<packageName></packageName>
					<script>echo("Test from script!\n")</script>
					<css>background-color: green;
</css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown>powiedz say from MUD</commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>-1</sizeX>
					<sizeY>7602180</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
			</ActionGroup>
		</ActionGroup>
	</ActionPackage>
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<packageName>deleteOldProfiles</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>deleteOldProfiles script</name>
				<packageName></packageName>
				<script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the "current"/"map" folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
	local dirpath = getMudletHomeDir()..slash..(delete_maps and "map" or "current")
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~="." and filename~=".." then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, "modification")}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format("\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.", delete_maps and "maps" or "profiles", keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date("%Y/%m", v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as "kept".
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho("\n&lt;red&gt;ERROR: "..errorstring)
				end
			end
		end
	end
	echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>warlock</name>
			<packageName>warlock</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Okienka</name>
				<packageName></packageName>
				<script>--Okienka
-- globalne obiekty
--containerLeft, containerRight, containerTop, containerBottom = nil
--minimap, minimapExits = nil
--mapper = nil

debug = false

function debugmsg(msg)
	if(debug == true) then
		cecho("  &lt;yellow:dim_grey&gt;--&lt;yellow:black&gt;" .. msg .. "\n")
	end
end</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>GeyserExt</name>
					<packageName></packageName>
					<script>--Okienka::GeyserExt::LayoutBox
Geyser.LayoutBox = Geyser.Container:new({
      name = "LayoutBoxClass"
   })

function get_rel_x(cont)
	if(cont.container == nil) then
		return cont:get_x()
	end
	return cont:get_x() - cont.container:get_x()
end

function get_rel_y(cont)
	if(cont.container == nil) then
		return cont:get_y()
	end
	return cont:get_y() - cont.container:get_y()
end


function Geyser.LayoutBox:add (window, cons)
   Geyser.add(self, window, cons)
   if not self.defer_updates then
      self:reposition()
   end
end

--- Responsible for placing/moving/resizing this window to the correct place/size.
-- Called on window resize events.
function Geyser.LayoutBox:reposition()
   self.parent:reposition()
	if(self.align == "LEFT") then
		self:reposition_left()
	elseif(self.align == "BOTTOM") then
		self:reposition_bottom()
	elseif(self.align == "RIGHT") then
		self:reposition_right()
	else
		echo("NO ALIGN PROVIDED FOR LayoutBox!\n")
	end
end

function Geyser.LayoutBox:reposition_bottom()
   local window_height = self:get_height()
   local start_y = window_height
   for _, window_name in ipairs(self.windows) do
      local window = self.windowList[window_name]
      local width = window.width
      local height = window.height
      if window.h_policy == Geyser.Dynamic then
         width = self:get_width()
      end
      if window.v_policy == Geyser.Dynamic then
         height = window_height * window.v_stretch_factor
      end
      window:resize(width, height)
		start_y = start_y - window:get_height()
		window:move(0, math.max(0, start_y))
		--echo(self.name .. ": window " .. window.name .. " position BOTTOM completed. End_y: " .. start_y .. "\n")
   end
end

function Geyser.LayoutBox:reposition_top()
   local window_height = self:get_height()
   local start_y = 0
   for _, window_name in ipairs(self.windows) do
      local window = self.windowList[window_name]
      local width = window.width
      local height = window.height
      if window.h_policy == Geyser.Dynamic then
         width = self:get_width()
      end
      if window.v_policy == Geyser.Dynamic then
         height = window_height * window.v_stretch_factor
      end
      window:resize(width, height)
		window:move(0, math.max(0, start_y))
		start_y = start_y + window:get_height()
		--echo(self.name .. ": window " .. window.name .. " position TOP completed. End_y: " .. start_y .. "\n")
   end
end

function Geyser.LayoutBox:reposition_left()
   local window_width = self:get_width()
   local start_x = window_width
   for _, window_name in ipairs(self.windows) do
      local window = self.windowList[window_name]
      local width = window.width
      local height = window.height
      if window.h_policy == Geyser.Dynamic then
         width = self:get_width()
      end
      if window.v_policy == Geyser.Dynamic then
         height = window_height * window.v_stretch_factor
      end
      window:resize(width, height)
		start_x = start_x - window:get_width()
		window:move(math.max(0, start_x), 0)
		--echo(self.name .. ": window " .. window.name .. " position LEFT completed. End_x: " .. start_x .. "\n")
   end
end

function Geyser.LayoutBox:reposition_right()
   local window_width = self:get_width()
   local start_x = 0
   for _, window_name in ipairs(self.windows) do
      local window = self.windowList[window_name]
      local width = window.width
      local height = window.height
      if window.h_policy == Geyser.Dynamic then
         width = self:get_width()
      end
      if window.v_policy == Geyser.Dynamic then
         height = window_height * window.v_stretch_factor
      end
      window:resize(width, height)
		window:move(math.max(0, start_x), 0)
		start_x = start_x + window:get_width()
		--echo(self.name .. ": window " .. window.name .. " position RIGHT completed. End_x: " .. start_x .. "\n")
   end
end

Geyser.LayoutBox.parent = Geyser.Container

function Geyser.LayoutBox:new(cons, container)
   -- Initiate and set Window specific things
   cons = cons or {}
   cons.type = cons.type or "LayoutBox"
   
   -- Call parent's constructor
   local me = self.parent:new(cons, container)
   setmetatable(me, self)
   self.__index = self
   return me
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>utils</name>
					<packageName></packageName>
					<script>-- Okienka::utils
-- cala obsluga okienek, robienia i usuwania elementow etc

elementsPool = elementsPool or {}

function addElementToPool(element, kind)
	local key = kind or element.kind or element.type
	local ep = elementsPool[key] or {}
	debugmsg("* Returning " .. key .. " to pool.")
	table.insert(ep, element)
	elementsPool[key] = ep
end

-- pobiera element z puli istniejacych... lub go tworzy na bierzaco.
-- type: Geyserowy typ jaki nalezy tutaj utworzyc
-- ctorfp: funkcja wskazujaca na konstruktor ktory ma utworzyc nam element
-- args: tablica arguemntow dla ctorfp
function getElementFromPool(kind, ctorfp, args, parent)
	local ep = elementsPool[kind] or {}
	if table.size(ep) &gt; 0 then
		debugmsg("* Returning "..kind.." from pool")
		local ret = table.remove(ep, 1)
		elementsPool[kind] = ep
		if (parent ~= nil) then parent:add(ret) end
		return ret
	else
		debugmsg("* Creating new " .. kind .. ", " .. (args.name or "(no name)"))
		local ret = nil
		if(ctorfp[1] ~= nil) then
			ret = ctorfp[2](ctorfp[1], args, parent)
		else
			ret = ctorfp[2](args, parent)
		end
		ret.kind = args.kind or kind -- upewnijmy sie ze dobrze sie ustawil rodzaj
		return ret
	end
end

function removeElement(element, recursive)
	if (element == nil) then return end
	if recursive then
		for i, w in pairs(element.windowList) do
			removeElement(w, recursive)
		end
	end
	debugmsg("* Removing element " .. element.name)
	addElementToPool(element)
	element:hide()
	element.container:remove(element)
	element.container = nil
end

function tableMerge(a, b)
   for k, v in pairs(b) do
		if(type(k) == "number") then
			table.insert(a, v)
		else
			a[k] = v
		end
	end
   return a
end

function findElementsByAttribute(attr_name, attr_value, container)
	local ret = {}
	for i, v in pairs(container.windowList) do
		if(v[attr_name] ~= nil and tostring(v[attr_name]) == tostring(attr_value)) then table.insert(ret, v) end
		local sub = findElementsByAttribute(attr_name, attr_value, v)
		if(sub ~= nil) then ret = tableMerge(ret, sub) end
	end
	return ret
end

function findElementById(id, container)
	for i, v in pairs(container.windowList) do
		if(v.id ~= nil and tostring(v.id) == tostring(id)) then return v end
		local sub = findElementById(id, v)
		if(sub ~= nil) then return sub end
	end
	--display("Nothing with id " .. id .. " found in " .. container.name)
	return nil
end

function createNewLabel(args, parent)
	local ctor = {Geyser.Label, Geyser.Label.new}
	return getElementFromPool("label", ctor, args, parent)
end

function createNewLayout(args, parent)
	local ctor = {Geyser.LayoutBox, Geyser.LayoutBox.new}
	return getElementFromPool("layout_container", ctor, args, parent)
end

--- testy
function testuj_ou()
	local ctor = {Geyser.Label, Geyser.Label.new} -- &lt;self&gt;, function
	local v = getElementFromPool("test_label", ctor, {name = "test label 1", x = 100, y = 100, height = 20, thickness = 20, bgColor = "red", type = "test_label"}, nil)
	display(v.name)
	removeElement(v)
	display(v.container == nil)
end
--------------------------------------------------------------------------------------------------------------------------------------
--Tworzy ramke dla kontenera
function createBox(parent, name, thickness, color)
	local borders = {nil, nil, nil, nil}
	borders[1] = createNewLabel({name=name.."b1", x = 0, y = 0, width = "100%", height = thickness, bgColor = color}, parent)
	borders[2] = createNewLabel({name=name.."b2", x = 0, y = "100%", width = "100%", height = thickness,	bgColor = color}, parent)
	borders[3] = createNewLabel({name=name.."b3", x = 0, y = 0, width = thickness, height = "100%",	bgColor = color}, parent)
	borders[4] = createNewLabel({name=name.."b4", x = "100%", y = 0, width = thickness, height = "100%",	bgColor = color}, parent)
	return borders
end</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>stats_grp</name>
					<packageName></packageName>
					<script>-- stats_grp</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>stats</name>
						<packageName></packageName>
						<script>-- stats

paski_ja = {
	{"kondycja", "rgb(0, 180, 0, 255)", "rgb(100, 5, 0, 200)"},
	{"mana", "rgb(60, 0, 180, 255)", "rgb(150, 0, 100, 200)"},
	{"zmeczenie", "rgb(180, 100, 0, 255)", "rgb(60, 30, 0, 200)"}
}
paski_inni = {
	{"kondycja", "rgb(0, 180, 0, 255)", "rgb(100, 5, 0, 200)"},
}
seq_num = seq_num or 0
akcja = akcja or {przeciwnik = "narozkaz najemnikowi zabij %", druzyna = "", inni = "", ja = ""}

-- helpers...
function get_seq_num()
	seq_num = seq_num + 1
	return seq_num
end

-- creators...
function createStatsLayout(window)
	containerStats = containerStats or Geyser.Container:new({
		name="stats",
    --x = "-31%",
    --y = mapper.get_y() + mapper.get_height(),
		--width="30%", height=containerBottom.get_y() - (mapper.get_y() + mapper.get_height()) - 10,
    x = "0px",
    y = "0px",
    width = "100%",
    height = "100%"
	}, window)
	containerDruzyna = containerDruzyna or createNewLayout({
		align = "BOTTOM",
		name="druzyna", x = "0px", y = "0px",
		width="100%", height="100%",
		v_policy=Geyser.Fixed, h_policy=Geyser.Fixed,
	}, containerStats)
end

function getStylesheetForStat(args)
	if(args.is_own) then
		return [[background: rgb(0, 0, 60, 255);]]
	elseif(args.is_enemy) then
		return [[background: rgb(60, 0, 0, 255);]]
	elseif(args.is_leader) then
		return [[background: rgb(60, 60, 0, 255);]]
	else
		return [[background: rgb(20, 20, 60, 255);]]
	end
end

buttons_enemy = {
	{name = "hide_me", message = "x", callback = "hideEnemyStatsFor", args = {}},
	{name = "compare_me", message = "P", callback = "commandEnemyById", args = {"porownaj sie z"}},
	{name = "kill_me", message = "Z", callback = "commandEnemyById", args = {"zabij"}},
	{name = "point_me", message = "W", callback = "commandEnemyById", args = {"wskaz"}},
	{name = "script_me", message = "S", callback = "callScriptById", args = {"przeciwnik"}},
}
buttons_druzyna = {
	{name = "leave_me", message = "X", callback = "commandEnemyById", args = {"porzuc"}},
	{name = "assist_me", message = "A", callback = "commandEnemyById", args = {"wesprzyj"}},
	{name = "point_me", message = "W", callback = "commandEnemyById", args = {"wskaz"}},
	{name = "script_me", message = "S", callback = "callScriptById", args = {"druzyna"}},
}
buttons_own = {}

-- tworzy klikalne labelki z akcjami. TODO: zamienic na miniconsole + echoLink aby mogly byc tooltipy.
function createButtonsForStat(args, parent)
	local buttons = args.is_enemy and buttons_enemy or (args.is_own and buttons_own or buttons_druzyna)
	local seq = args.seq or get_seq_num()
	local start_x = -10
	local step_x = -15
	for i, v in pairs(buttons) do
		parent[v.name] = createNewLabel({
			name = v.name .. "_" .. seq, message = v.message, fgColor = "white", color = "black", fontSize = 7,
			width = 10, height = 10, x = start_x, y = -10,
		}, parent)
		start_x = start_x + step_x
	end
end

-- aktualizuje callbacki do klikania - ustawia aktualne id podpiete pod statystyki
function updateButtonStatsCallback(args, parent)
	local buttons = args.is_enemy and buttons_enemy or (args.is_own and buttons_own or buttons_druzyna)
	for i, v in pairs(buttons) do
		parent[v.name]:setClickCallback(v.callback, parent.id, unpack(v.args))
	end
end

-- Uzywamy tutaj template pattern, yay for design patterns!
-- pojedynczy box z imieniem i statmi jednej istoty
function createStatsContainer(args, parent)
	local kind = "stats_container_" .. (args.is_enemy and "enemy" or args.is_own and "own" or "team")
	local ctor = {nil, statsContainerCtor}
	local stat = getElementFromPool(kind, ctor, args, parent)
	-- customize!
	stat.imieLabel:echo("&lt;center&gt;" .. args.imie .. "&lt;/center&gt;")
	stat.imieLabel:setStyleSheet(getStylesheetForStat(args))
	stat.imie = args.imie
	stat.id = args.id
	stat.is_own = args.is_own

	updateButtonStatsCallback(args, stat)

	return stat
end

function statsContainerCtor(args, parent)
	local seq = args.seq or get_seq_num()
	local stats = Geyser.Container:new({
	  		name = args.name or ("stats_" .. seq),
			v_policy=Geyser.Fixed, h_policy=Geyser.Fixed,
			width = "90px", height = (18 + 15 * #args.paski + 5),
		}, parent)
	stats.is_enemy = args.is_enemy
	stats.imieLabel = Geyser.Label:new({
			name = "imie" .. seq, x = 0, y = 2,
			width = "100%", height = "13px",
			fgColor = "white",	color = "black",
			fontSize = 8,
			message = ""
		}, stats)

	createButtonsForStat(args, stats)

	local start_y = 18
	for i, v in pairs(args.paski) do
			k = v[1]
			stats[k] = Geyser.Gauge:new({
				name=k .. seq, x = "2px", y = start_y,
				width="-2px", height="10px",
				fontSize = 6,
			}, stats)
			stats[k .. "label"] = Geyser.Label:new({
				name=k .. seq .. "label", x = "2px", y = start_y + 1,
				width="-2px", height="10px",
				fontSize = 7,
			}, stats)
			stats[k .. "label"]:setColor(0, 0, 0, 0)

			stats[k].front:setStyleSheet([[
				background: ]] .. v[2] .. [[;
   				border-top: 1px black solid;
	    		border-left: 1px black solid;
	   		 	border-bottom: 1px black solid;
   		 		border-radius: 2;
	   	 	padding: 1px;
			]])
			stats[k].back:setStyleSheet([[
				background: ]] .. v[3] .. [[;
   				border-top: 1px black solid;
	    		border-left: 1px black solid;
	   			border-bottom: 1px black solid;
				border-radius: 2;
				padding: 1px;
			]])
			start_y = start_y + 15
	end
	
	createBox(stats, "Box" .. seq, "1px", bcol)
	return stats
end

function createRowWrapper(args, parent)
	local kind = "stats_row_wrapper"
	local ctor = {nil, rowWrapperCtor}
	local row = getElementFromPool(kind, ctor, args, parent)
	-- customize!
	return row
end

function rowWrapperCtor(args, parent)
	local seq = args.seq or get_seq_num()
	local row = createNewLayout({
			align = args.align or "RIGHT", kind = kind,
			name = args.name or ("row_wrapper_" .. seq),
			height = args.height, width = args.width or "100%",
			v_policy=Geyser.Fixed, h_policy=Geyser.Fixed
		}, parent)
	return row
end

-- funkcja usuwajaca zagubione elementy z kontenera statystyk
function cleanupStatLeftovers()
	for k, v in pairs(findElementsByAttribute("kind", "stats_row_wrapper", containerStats)) do
		if(table.size(v.windowList) == 0) then
			debugmsg("* Removing leftover row: " .. v.name)
			local parent = v.container
			removeElement(v)
			parent:reposition()
		else
			debugmsg("* Row " .. v.name .. " has " .. table.size(v.windowList) .. " elements")
		end
	end
end

-- obsluga pokazywania i chowania statow dla siebie i czlonkow druzyny
function showStatsFor(id, imie, moje, leader, rank)
	moje = moje or false
	local stat = findElementById(id, containerStats)
	if(stat == nil) then
		debugmsg("* Creating new stats for " .. imie .. " (" .. id .. ", " .. (moje and "moje" or "czyjes") .. ")")
		local paski = moje and paski_ja or paski_inni
		local row = createRowWrapper({height = 20 + 15 * #paski + 3, width = "100%"}, containerDruzyna)
		stat = createStatsContainer({id = id, imie = imie, paski = paski, is_enemy = false, is_own = moje, is_leader = leader, team_rank = rank}, row)
		row:reposition()
		containerDruzyna:reposition()
	end
	stat:show()
	return stat
end

function hideStatsFor(id)
	local stat = findElementById(id, containerStats)
	if(stat == nil) then return end
	local row = stat.container
	local parent = row.container
	debugmsg("* Removing stats for " .. id)
	for i, v in pairs(row.windowList) do
		removeElement(v)
	end
	removeElement(row)
	parent:reposition()
end

-- obsluga pokazywania i chowania statow dla wrogow
function showEnemyStatsFor(id, enemy_id, enemy_name, move_enemy)
	debugmsg("* Show stats for " .. id .. "'s enemy " .. enemy_id .. ", " .. enemy_name)
	local nasz_stat = findElementById(id, containerStats)
	local enemy_stat = findElementById(enemy_id, containerStats)
	if(enemy_stat == nil) then
		debugmsg("* Creating new stats for " .. enemy_name .. " (" .. id .. ")")
		local seq = get_seq_num()
		local ename = string.split(enemy_name, " ")
		ename = table.concat({ename[#ename], ename[#ename - 1]}, ", ")
		enemy_stat = createStatsContainer({id = enemy_id, imie = ename, real_name = enemy_name, paski = paski_inni, is_enemy = true, name = "stats_" .. seq, seq = seq}, nasz_stat.container)
		nasz_stat.container:reposition()
	elseif(enemy_stat.container ~= nasz_stat.container and move_enemy == true) then
		debugmsg("* Moving enemy " .. enemy_stat.id .. " to " .. nasz_stat.id)
		local old_row = enemy_stat.container
		old_row:remove(enemy_stat)
		old_row:reposition()
		nasz_stat.container:add(enemy_stat)
		nasz_stat.container:reposition()
	end
	enemy_stat:show()
	return stat
end

function hideEnemyStatsFor(enemy_id)
	local enemy_stat = (type(enemy_id) == "table") and enemy_id or findElementById(enemy_id, containerStats)
	if(enemy_stat == nil) then return end
	local row = enemy_stat.container
	removeElement(enemy_stat)
	row:reposition()
end

-- aktualizacje wskazniczkow
function setStatGauge(id, gauge, wartosc, max)
	local stat = findElementById(id, containerStats)
	--debugmsg("setGauge: " .. id .. ", " .. gauge .. " =&gt; " .. wartosc .. ", stat found: " .. (stat ~= nil and "yes" or "no"))
	if(stat ~= nil and stat[gauge] ~= nil and max &gt; 0) then
		stat[gauge]:setValue(wartosc, max);
		stat[gauge .. "label"]:echo( "&lt;center&gt;&lt;b&gt;" .. wartosc .. "&lt;/b&gt; / " .. max .. "&lt;/center&gt;", "white")
	end
end

-- onsluga akcje podpietych pod wrogow (te literki klikalne)
function commandEnemyById(id, komenda)
	send(komenda .. " ob_" .. id, false)
end

function callScriptById(id, co)
	if(akcja[co] == nil or akcja[co] == "" or akcja[co] == " ") then
		echo("    Brak ustalonej akcji. Wykonaj /akcja " .. co .. " kopnij % w kostke\n")
		return
	end
	local cmd_ev = akcja[co]:gsub("%%", "ob_" .. tostring(id))
	send(cmd_ev, false);
end

-- funkcje, powiedzmy, API, dla reszty skryptow
function getWholeTeam()
	return tableMerge(findElementsByAttribute("kind", "stats_container_team", containerStats), findElementsByAttribute("kind", "stats_container_own", containerStats))
end

function getEnemiesFor(id)
	local stat = nil
	if(type(id) == "table") then 
		stat = id
	else
		stat = findElementById(id, containerStats)
	end
	local t = {}
	for k, v in pairs(stat.container.windowList or {}) do
		if(v.is_enemy) then
			table.insert(t, v.id)
		end
	end
	return t
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>czat_windows</name>
					<packageName></packageName>
					<script>-- Czat

-- Pokazuje odpowiednie okienko czatu
function showContainerByName(name)
	for k, w in pairs(mainChatContainer.windowList) do
		if(w.name ~= name and w.name:ends("Container")) then
			w:hide()
			w.buttonActivate:setColor("navy_blue")
			w.buttonActivate:setFgColor("white")
		end	
		if(w.name == name) then
			w.buttonActivate:setColor("steel_blue")
			w.buttonActivate:setFgColor("black")
			w:show()
		end
	end
end

-- Mruga zakladka od czatu
function flashMe(container, delay, num)
	container:flash(delay)
	num = num - 1
	if(num == 0) then return end
	tempTimer(delay * 2, function() flashMe(container, delay, num) end)
end

function flashChatContainerButton(container, show)
	flashMe(container.buttonActivate, 0.2, 10)
	if(show == true) then
		showContainerByName(container.name)
	end
end

function createChatWindows(window)
	mainChatContainer = Geyser.Container:new({
		name = "mainChatContainer",
		--x = "-104c", y = "1c",
  		--width="101c", height="10c",
    x = "10px", y = "5px", height = "100%-10px", width = "100%-5px"
	}, window)
	chatContainer = Geyser.Container:new({
		name = "chatContainer",
		x = "10", y = "0",
  		width="98%", height="100%",
	}, mainChatContainer)
	wizContainer = Geyser.Container:new({
		name = "wizContainer",
		x = "10", y = "0",
  		width="98%", height="100%",
	}, mainChatContainer)
	chatConsole = Geyser.MiniConsole:new({
  		name="chat_rozmowy", x = "1px", y = "1px",
  		width="-1px", height="-1px",
		wrapAt=100,
	}, chatContainer)
	createBox(chatContainer, "chatBox", "2px", "gray")
	chatConsole:setColor(0, 10, 0)
	setTextFormat("rozmowy", 0, 10, 0, 255, 255, 255, 0, 0, 0)
	setBgColor("rozmowy", 0, 10, 0)

	wizConsole = Geyser.MiniConsole:new({
  		name="chat_wizline", x = "1px", y = "1px",
  		width="-1px", height="-1px",
		wrapAt=100,
	}, wizContainer)
	createBox(wizContainer, "wizBox", "2px", "gray")
	wizConsole:setColor(0, 0, 10)
	setTextFormat("wizline", 0, 0, 10, 255, 255, 255, 0, 0, 0)
	setBgColor("wizline", 0, 0, 10)

	chatContainer.buttonActivate = Geyser.Label:new({
		name = "activate_chat",
		x = 0, y = 0, width = 14, height = 12,
		color="steel_blue", fgColor="black", message = "&lt;center&gt;C&lt;/center&gt;"
	}, mainChatContainer);
	chatContainer.buttonActivate:setClickCallback("showContainerByName", chatContainer.name)

	wizContainer.buttonActivate = Geyser.Label:new({
		name = "activate_wiz",
		x = 0, y = 15, width = 14, height = 12,
		color="navy_blue", fgColor="white", message = "&lt;center&gt;W&lt;/center&gt;"
	}, mainChatContainer);
	wizContainer.buttonActivate:setClickCallback("showContainerByName", wizContainer.name)

	wizContainer:hide() -- ukryte domyslnie, po co ono...
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>startup</name>
					<packageName></packageName>
					<script>--Okienka::startup
win_created = win_created or false
stats_created = stats_created or false

WindowWidth = 0;
WindowHeight = 0;
WindowWidth, WindowHeight = getMainWindowSize();
borderTop, borderLeft, borderBottom, borderRight = 50, 50, 20, 0

function okienka_startup()
	if(not win_created) then
		createWindows();
		win_created = true
	end
--	if(not stats_created) then
--		createStats();
--		stats_created = true
--	end
end

-- Tworzy glowne okno z dodatkowymi kontenerami po bokach.
function createWindows()
	setBorderTop(borderTop)
	setBorderBottom(borderBottom)
  	setBorderLeft(borderLeft)
  	setBorderRight(borderRight)

	-- Dodatkowe paski po bokach i na dole
	containerLeft = Geyser.Container:new({
		name = "containerLeft", x = 0, y = 0,
		width = borderLeft, height="100%"
	})
	containerTop = Geyser.Container:new({
		name = "containerTop", x = borderLeft, y = 0,
		width = "100%", height=borderTop
	})
	containerBottom = Geyser.Container:new({
		name = "containerBottom", x = borderLeft, y = -borderBottom,
		width = "100%", height=borderBottom
	})

  -- UserWindow do wszystkich elementow dodatkowych do przesuwania po ekranie
  chatWindow = Geyser.UserWindow:new({
    name = "Rozmowy",
    x = "-34%",
    y = "0%",
    width="33%", height ="20%",
    docked = true,
    dockPosition = "right"
  })
  mapWindow = Geyser.UserWindow:new({
    name = "Mapper",
    x = "-34%",
    y = "20%",
    width="33%", height ="40%",
    docked = true,
    dockPosition = "right"
  })
  statsWindow = Geyser.UserWindow:new({
    name = "Stats",
    x = "-34%",
    y = "60%",
    width="33%", height ="40%",
    docked = true,
    dockPosition = "right"
  })

	-- Okienko z pelna mapa
	mapper = Geyser.Mapper:new({
		name = "mapper",
		--x = "-31%",
    --y = "12c",
		--width = "30%",
    --height = "40%"
    x = "10px",
    y = "5px",
    width = "100%-5px",
    height = "100%-10px",
    embedded = true,
    --dockPosition = "right"
	}, mapWindow)

	createChatWindows(chatWindow);
	createMinimap(containerLeft);
	createSpecialExitsLine(containerBottom);
	createStatsLayout(statsWindow)
end

function createMinimap(parent)
	minimap = Geyser.MiniConsole:new({
		name="minimap", x = "-6c", y = "-4c",
		width = "5c", height = "4c",
		fontSize = 10
	}, parent)
	--minimap:setTextFormat(10, 50, 10, 255, 255, 255, 1, 0, 0);
	return minimap
end

function createSpecialExitsLine(parent)
	minimapExits = Geyser.MiniConsole:new({
  		name="wyjscia", x = "1px", y = "-15px",
  		width="-1px", height="15px",
		wrapAt=1000,
	}, containerBottom)
	setTextFormat("wyjscia", 0, 20, 0, 200, 255, 200, 0, 0, 0)
	setBgColor("wyjscia", 0, 20, 0)
	return minimapExits
end


okienka_startup()
loadWindowLayout()
</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>events</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>userWindowResize</name>
						<packageName></packageName>
						<script>function userWindowResize()
  saveWindowLayout()
end</script>
						<eventHandlerList>
							<string>sysUserWindowResizeEvent</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Wyjscia</name>
				<packageName></packageName>
				<script>--Wyjscia
mudlet = mudlet or {}
mudlet.mapper_script = true

kierunki = {}
kierunki["polnoc"] = {{"north", "n"}, 1, {0, 2, 0}, "poludnie", "|"}
kierunki["polnocny-wschod"] = {{"northeast", "ne"}, 2, {2, 2, 0}, "poludniowy-zachod", "/"}
kierunki["polnocny-zachod"] = {{"northwest", "nw"}, 3, {-2, 2, 0}, "poludniowy-wschod", "\\"}
kierunki["wschod"] = {{"east", "e"}, 4, {2, 0, 0}, "zachod", "-"}
kierunki["zachod"] = {{"west", "w"}, 5, {-2, 0, 0}, "wschod", "-"}
kierunki["poludnie"] = {{"south", "s"}, 6, {0, -2, 0}, "polnoc", "|"}
kierunki["poludniowy-wschod"] = {{"southeast", "se"}, 7, {2, -2, 0}, "polnocny-zachod", "\\"}
kierunki["poludniowy-zachod"] = {{"southwest", "sw"}, 8, {-2, -2, 0}, "polnocny-wschod", "/"}
kierunki["gora"] = {{"up", "u", "gore"}, 9, {0, 0, 2}, "dol", "^"}
kierunki["dol"] = {{"down", "d"}, 10, {0, 0, -2}, "gora", "v"}
--kierunki["wejscie"] = {{"in"}, 11, {0, 0, 2}, "wyjscie", "i"}
--kierunki["wyjscie"] = {{"out"}, 12, {0, 0, -2}, "wejscie", "o"}

env = {}
env[0] = {type = "ROOM_NORMAL", weight = 2, color = {120, 120, 120, 255}}
env[1] = {type = "ROOM_IN_WATER", weight = 6, color = {120, 120, 220, 255}}
env[2] = {type = "ROOM_UNDER_WATER", weight = 20, color = {20, 20, 220, 255}}
env[3] = {type = "ROOM_IN_AIR", weight = 20, color = {190, 190, 190, 200}}
env[4] = {type = "ROOM_BEACH", weight = 4, color = {240, 230, 20, 255}}
env[5] = {type = "ROOM_IN_LOW_MOUNTAINS", weight = 5, color = {120, 120, 120, 255}}
env[6] = {type = "ROOM_IN_HIGH_MOUNTAINS", weight = 9, color = {80, 80, 80, 255}}
env[7] = {type = "ROOM_IN_HILLS", weight = 4, color = {120, 160, 120, 255}}
env[8] = {type = "ROOM_IN_FOREST", weight = 3, color = {0, 220, 0, 255}}
env[9] = {type = "ROOM_IN_PLAIN", weight = 2, color = {90, 120, 90, 255}}
env[10] = {type = "ROOM_IN_CAVE", weight = 4, color = {70, 70, 70, 255}}
env[11] = {type = "ROOM_IN_SWAMP", weight = 5, color = {0, 120, 50, 255}}
env[12] = {type = "ROOM_IN_ROAD", weight = 1, color = {170, 80, 12, 255}}
env[13] = {type = "ROOM_IN_CITY", weight = 1, color = {120, 120, 120, 255}}
env[14] = {type = "ROOM_IN_VILLAGE", weight = 1, color = {120, 120, 120, 255}}
env[15] = {type = "ROOM_UNVISITED", weight = 100, color = {120, 20, 120, 150}}

-- env ponizej sa zarezerwowane przez mudleta
ENV_START_NUM = 17

service = {}
service[1] = {type = "ROOM_SERVICE_POSTOFFICE", letter = "P"}
service[2] = {type = "ROOM_SERVICE_SMITH", letter = "K"}
service[3] = {type = "ROOM_SERVICE_SHOP", letter = "S"}
service[4] = {type = "ROOM_SERVICE_BANK", letter = "$"}
service[5] = {type = "ROOM_SERVICE_MESSAGEBOARD", letter = "T"}
service[6] = {type = "ROOM_SERVICE_WATER", letter = "w", color = {0, 0, 200, 255}}
service[7] = {type = "ROOM_SERVICE_PUB", letter = "J"}
service[8] = {type = "ROOM_SERVICE_BARBER", letter = "F"}


currentRoom = currentRoom or {id = nil, exits = {}, specialExits = {}, areaId = nil, room = nil}

function setupRoomColors()
	for i, data in ipairs(env) do
		setCustomEnvColor(ENV_START_NUM + i, unpack(data.color))
	end
end

function hasStubExit(roomId, kier)
	local stubs = getExitStubs(roomId)
	if(type(stubs) ~= "table") then return false end
	if(kierunki[kier] == nil) then return false end
	for i, v in pairs(stubs) do
		if(v == kierunki[kier][2]) then
			return true
		end
	end
	return false
end

function hasExit(roomId, kier)
	local exits = getRoomExits(roomId)
	if(type(exits) ~= "table") then return false end
	if(kierunki[kier] == nil) then return false end
	for i, v in pairs(exits) do
		if(i == kierunki[kier][1][1]) then
			return true
		end
	end
	return false
end

function deductFromMoveDesc(komenda)
	local do_gory = {"wspina", "na gore", "do gory", "na pietro"}
	local w_dol = {"schodzi", "na dol"}
	for k, data in pairs(kierunki) do
		if(komenda[2]:find(k)) then
			return data[3][1], data[3][2], data[3][3], true
		end
	end
	for k, v in pairs(do_gory) do
		if(komenda[2]:find(v)) then
			return 0, 0, 2, true
		end
	end
	for k, v in pairs(w_dol) do
		if(komenda[2]:find(v)) then
			return 0, 0, -2, true
		end
	end
	-- nie wiem nic, domyslna wartosc...
	return 0, 0, 0, false
end

function findMostSpacious(spaces)
	-- znalezc ciagle bloki, wybrac najdluzszy
	-- zwrocic srodkowe pole z najdluzszego bloku
	local dx, dy, dz = {0, 0, 0}, {0, 0, 0}, {0, 0, 0}
	local mx, my, mz = 2, 2, 2
	local i, j
	local found = false
	-- poziomy i piony zliczamy. gora-dol ignoruje chwilowo
	for i = 1, 3, 1 do
		for j = 1, 3, 1 do
			if(spaces[(i - 1) * 3 + j][1] == 0) then
				found = true
				dx[j] = dx[j] + 1
				if(dx[j] &gt; dx[mx] or (dx[j] == dx[mx] and spaces[(my - 1) * 3 + j][2] == 0)) then mx = j end
				dy[i] = dy[i] + 1
				if(dy[i] &gt; dy[my] or (dy[i] == dy[my] and spaces[(i - 1) * 3 + mx][3] == 0)) then my = i end
			end
		end
	end
	--display(dx)
	--display(dy)
	if(not found) then
		-- uhuh, nie ma miejsca. Gora i dol w takim razie!
		return 0, 0, 1 --gora na sztywno chwilowo
	end
	local s = spaces[mx + (my - 1) * 3]
	return s[2], s[3], s[4]
end

function getShiftedRoomCoordinates(fromId, komenda)
	local exit = komenda[3]
	local x, y, z = getRoomCoordinates(fromId)
	if(exit == nil or kierunki[exit] == nil) then
		-- wyjscie specjalne. Gdzie umiescic nowa lokacje?
		local dx, dy, dz, fs = deductFromMoveDesc(komenda)
		if(fs) then
			return x + dx, y + dy, z + dz
		end
		local nearby = {}
		for dy = -2, 2, 2 do for dx = -2, 2, 2 do
			local nr = getRoomsByPosition(getRoomArea(fromId), x + dx, y + dy, z + dz)
			table.insert(nearby, {table.size(nr), dx, dy, dz })
		end end
		local nx, ny, nz = findMostSpacious(nearby)
		--echo("Shifts: " .. nx .. ", " .. ny .. ", " .. nz .. "\n")
		return x + nx, y + ny, z + nz
	end
	x = x + kierunki[exit][3][1]
	y = y + kierunki[exit][3][2]
	z = z + kierunki[exit][3][3]
	return x, y, z
end

function updateRoomAreaData(room)
	if(room.czas ~= nil) then
		local roomId = getRoomIDbyHash(room.id)
		setRoomUserData(roomId, "czas", tostring(room.czas))
	end
end

function updateNewRoom(newId, room)
	local prevId = getRoomIDbyHash(room.idprev)
	local x, y, z;
	if(room.idprev ~= nil and type(room.idprev) == "string") then
		if(prevId == -1) then
			x, y, z = 0, 0, 0
		else
			x, y, z = getShiftedRoomCoordinates(prevId, room.komenda)
		end
	else
		x, y, z = 0, 0, 0
	end
	setRoomCoordinates(newId, x, y, z)
	setRoomWeight(newId, env[room.rodzaj].weight)
	setRoomEnv(newId, ENV_START_NUM + room.rodzaj)
end

function createNewRoom(room, areaId)
	local newId = createRoomID()
	if(newId ~= nil and addRoom(newId)) then
		setRoomArea(newId, areaId)
		setRoomIDbyHash(newId, room.id)
		updateNewRoom(newId, room)
		--echo("rozmowy", "New room id: " .. newId .. ", coord: [" .. x .. "," .. y .. "," .. z .. "]\n")
		return newId
	end
	echo("rozmowy", "Nie stworzono pokoju!\n")
	return nil
end

function connectExits(room, roomId, prevId)
	if(prevId == nil or not roomExists(prevId)) then return end
	
	local cmd = room.komenda[3]
	local kdat = kierunki[cmd]
	if(kdat ~= nil) then
		if(hasStubExit(prevId, cmd)) then
			connectExitStubRpl(prevId, roomId, kdat[2], kierunki[kdat[4]][2])
		else
			local prevExits = getRoomExits(prevId)
			if(prevExits[kdat[1][1]] ~= roomId) then
				setExit(prevId, roomId, kdat[2])
			end
		end
	elseif(room.komenda[1] ~= "X") then
		addSpecialExit(prevId, roomId, room.komenda[3])
	end
end

function getRoomsThatLeadHere(toId)
	local leads = {}
	for roomId, desc in pairs(getRooms()) do
		if(table.contains(getRoomExits(roomId), toId)) then
			table.insert(leads, roomId)
		end
	end
	return leads
end

function getAreaId(nazwa)
	if(table.contains(getAreaTable(), nazwa)) then
		return getAreaTable()[nazwa]
	else
		return addAreaName(nazwa)
	end
end

-- Na razie takie zeby cokolwiek bylo.
-- Dodaje drzwi na mapie jesli wlasnie przeszlismy przez drzwi.
-- Docelowo dodac w gmcp glance info o drzwiach i ich statusie.
function insertDoors(room)
	local roomId = getRoomIDbyHash(room.id)
	local prevId = getRoomIDbyHash(room.idprev)
	if(string.match(room.komenda[2], "drzwi") and not room.komenda[3] == 0) then
		setDoor(roomId, kierunki[kierunki[room.komenda[3]][4]][1][2], 1)
	end
end

function insertVisibleDoors(roomId, drzwi)
	for i, door_data in ipairs(drzwi) do
		if(kierunki[door_data[1]] ~= nil) then
			if not hasExit(roomId, door_data[1]) then
				setExitStub(roomId, kierunki[door_data[1]][2], true)
			end
         -- Glupie troche - nie rysuje drzwi na exitStubach
			setDoor(roomId, kierunki[door_data[1]][1][2], 2 - door_data[2])
		end
	end
end

function makeMapStubRoom(room)
	local areaId = getAreaId(room.obszar)
	local roomId = getRoomIDbyHash(room.id)
	if(roomId == -1) then
		roomId = createNewRoom(room, areaId)
	end
	return roomId,areaId
end

function makeMapRoom(room)
	local areaId = getAreaId(room.obszar)
	local roomId = getRoomIDbyHash(room.id)
	local prevId = getRoomIDbyHash(room.idprev)
  local prevAreaId = getRoomArea(prevId)

	if(roomId == -1) then
		roomId = createNewRoom(room, areaId)
	end
	connectExits(room, roomId, prevId)
  if(areaId ~= prevAreaId and room.komenda[1] ~= "X" and prevAreaId ~= nil) then
    local labelId = getRoomUserData(prevId, "labelIdDo" .. areaId)
    if(labelId == nil or not table.contains(getMapLabels(prevAreaId), tonumber(labelId))) then
      local posx, posy, posz = getShiftedRoomCoordinates(prevId, room.komenda)
      if(posx &lt; getRoomCoordinates(prevId)) then posy = posy + 1 end
      labelId = createMapLabel(prevAreaId, getRoomAreaName(areaId), posx, posy, posz, 0,0,0, 210,210,210, 20, 8, false, true)
      setRoomUserData(prevId, "labelIdDo" .. areaId, labelId)
    end
  end

	centerview(roomId)
	currentRoom.id = roomId
	currentRoom.prevId = prevId
	currentRoom.cmd = room.komenda
  currentRoom.areaId = areaId
  currentRoom.room = room
	insertDoors(room)
	return roomId,areaId
end

function connectExitStubRpl(roomId, prevRoomId, directionId, reverseDirectionId)
	setExit(roomId, prevRoomId, directionId)
	setExit(prevRoomId, roomId, reverseDirectionId)
end

function enrichMapRoom(room)
	local roomId = getRoomIDbyHash(room.id)
	if(roomId == nil) then return end

	setRoomName(roomId, room.nazwa)
	for i, k in ipairs(room.wyjscia) do
		if(kierunki[k] ~= nil and not hasExit(roomId, k)) then
			setExitStub(roomId, kierunki[k][2], true)
		end
	end
	if(currentRoom.cmd ~= nil and currentRoom.prevId ~= nil and currentRoom.id == roomId and kierunki[currentRoom.cmd[3]] ~= nil) then
		-- Przypuszczamy, ze jesli wyjscia sie pokrywaja, to sie lacza. Robimy dwustronne od razu.
		local cmd = kierunki[currentRoom.cmd[3]][4]
		local kdat = kierunki[cmd]
		if(hasStubExit(roomId, cmd)) then
			connectExitStubRpl(roomId, currentRoom.prevId, kdat[2], kierunki[kdat[4]][2])
		end
	end
	if(room.usluga &gt; 0 and service[room.usluga] ~= nil) then
		setRoomChar(roomId, service[room.usluga].letter)
		setRoomUserData(roomId, "service", yajl.to_string(service[room.usluga]))
	end
	insertVisibleDoors(roomId, room.drzwi)
end
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>startup</name>
					<packageName></packageName>
					<script>--Wyjscia::startup
setupRoomColors()</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>minimap</name>
					<packageName></packageName>
					<script>--Wyjscia::minimap
function displaySpecialExits(exits)
	for k, v in ipairs(exits) do
		fg(minimapExits.name, "dark_olive_green")
		echo(minimapExits.name, " | ")
		fg(minimapExits.name, "DarkSlateBlue")
		echoLink(minimapExits.name, v, [[send("]] .. v .. [[")]], "Wyjscie specjalne: " .. v, true)		
	end
	if #exits &gt; 0 then
		fg(minimapExits.name, "dark_olive_green")
		echo(minimapExits.name, " | ")
	end
	resetFormat(minimapExits.name)
end

function displaySpecialExitsFromMap()
	local ex = {}
  room = currentRoom
  if(room == nil) then return end
	for k, v in pairs(getSpecialExitsSwap(room.id) or {}) do
		if(not table.contains(room.specialExits or {}, k)) then
			table.insert(ex, k)
		end
	end
	if(#ex &gt; 0) then
		displaySpecialExits(ex)
	end
end

function drawExitsOnConsole(exits)
	local l = { {" ", " ", " ", " ", " "}, {" ", "o", " ", " ", " "}, {" ", " ", " ", " ", " "}, {" ", " ", " ", " ", " "}}
	local s = {}
	for i, data in ipairs(exits) do
		if(data == "gora") then
			l[1][5] = "^"
			l[2][5] = "|"
		elseif(data == "dol") then
			l[3][5] = "v"
			l[2][5] = "|"
		elseif(kierunki[data] ~= nil) then
			idx = kierunki[data][3]
			l[2 - idx[2] / 2][2 + idx[1] / 2] = kierunki[data][5]
		else -- special exit!
			table.insert(s, data)
		end
	end
	--display(l)
	clearWindow(minimap.name)
	clearWindow(minimapExits.name)
	minimap:echo(table.concat(l[1], "") .. "\n")
	minimap:echo(table.concat(l[2], "") .. "\n")
	minimap:echo(table.concat(l[3], "") .. "\n")
	minimap:echo(table.concat(l[4], ""))
	--minimapExits:echo(table.concat(s, ", "))
	displaySpecialExits(s)
	currentRoom.exits = table.n_complement(exits, s)
	currentRoom.specialExits = s
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="no" isFolder="no">
					<name>speedwalk</name>
					<packageName></packageName>
					<script>--Wyjscia::speedwalk
speedWalkStep = 1
lazikWaiting = false

registerAnonymousEventHandler("warlock.newRoom", "doSpeedWalkStep")

function abortSpeedWalk(komunikat)
	komunikat = komunikat or "    PRZERWANE CHODZENIE.\n"
	speedWalkDir = nil
	speedWalkPath = nil
	stepWalkStep = 1
	echo(komunikat)
end

function doSpeedWalkStep(event)
	lazikWaiting = false
	if(speedWalkPath == nil or #speedWalkPath &lt; 1) then return end
	if(speedWalkStep &gt; #speedWalkPath) then
		abortSpeedWalk("    CEL PODROZY OSIAGNIETY.\n")
		return
	end
	
	local expected = speedWalkPath[speedWalkStep - 1] or currentRoom.id
	if(currentRoom.id == tonumber(expected)) then
		local kier = speedWalkDir[speedWalkStep]
		if(kier == "up") then kier = "u"; end
		if(kier == "down") then kier = "d"; end
		send(kier, true)
	else
		abortSpeedWalk("    PRZERWANE CHODZENIE, NIEOCZEKIWANA LOKACJA.\n")
	end
	speedWalkStep = speedWalkStep + 1
end

function doSpeedWalk()
   cecho("Droga do przejscia: " .. table.concat(speedWalkDir, ", ") .. "\n    Nacisnij &lt;white:red&gt;F12&lt;reset&gt; aby przerwac.\n")
   --echo("Rooms we'll pass through: " .. table.concat(speedWalkPath, ", ") .. "\n")
	speedWalkStep = 1
	doSpeedWalkStep()
end

function getRoomByExit(fromId, kierunek)
  local exits = getRoomExits(fromId)
  for dir, roomId in pairs(exits) do
    if(table.contains(kierunki[kierunek][1], dir)) then return roomId end
  end
  return nil
end

function kierunkiPoDrodze(k, v)
  local roomId = getRoomByExit(currentRoom.id, v)
  if(roomId ~= nil) then
    local rtype = env[getRoomEnv(roomId) - ENV_START_NUM].type
    return rtype == "ROOM_IN_ROAD"
  end
  return false
end

function lazikWalkStep()
  if(lazikWaiting) then return end
  lazikWaiting = true
  if(currentRoom.cmd == nil) then
    echo("    Nie wiem skad przyszlismy.\n")
    return
  end
	if(kierunki[currentRoom.cmd[3]] == nil) then
		echo("    Kierunek nie jest standardowy.\n")
		return
	end
	local powrot = kierunki[currentRoom.cmd[3]][4]
	local dalsze = table.n_complement(currentRoom.exits, { powrot })
	if(table.size(dalsze) &gt; 1) then
    -- opcja na chodzenie traktem, o ile jestesmy na trakcie
    local rtype = env[getRoomEnv(currentRoom.id) - ENV_START_NUM].type
    if(rtype == "ROOM_IN_ROAD") then
      dalsze = table.collect(dalsze, kierunkiPoDrodze)
    end
    if(table.size(dalsze) &gt; 1) then
      echo("    Zbyt wiele wyjsc, poddaje sie.\n")
      return
    end
  end
  if(table.size(dalsze) &lt; 1) then
    echo("    Brak wyjsc, nie wiem gdzie isc.\n")
    return
  end
  local kier = dalsze[table.keys(dalsze)[1]]
  send(kier, true)
end

function wyjdzSpecjalnym()
	local cmdsmap = getSpecialExits(currentRoom.id) or {}
	local cmds = currentRoom.specialExits

	for k, v in pairs(cmdsmap) do
		for kk, vv in pairs(v) do
			if(table.index_of(cmds, kk) == nil) then
				table.insert(cmds, kk)
			end
		end
	end
	if(table.size(cmds) == 0) then
		echo("    Brak wyjsc specjalnych.\n")
		return
	end
	if(table.size(cmds) == 1) then
		send(cmds[1], true)
		return
	end
	if(table.contains(cmds, "wejscie")) then
		send("wejscie", true)
		return
	end
	if(table.contains(cmds, "schody")) then
		send("schody", true)
		return
	end
	if(table.contains(cmds, "wyjscie")) then
		send("wyjscie", true)
		return
	end
	echo("    Zbyt wiele wyjsc specjalnych!\n")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>map_support</name>
					<packageName></packageName>
					<script>--map support scripts
function findAreaID(areaname)
  local list = getAreaTable()

  -- iterate over the list of areas, matching them with substring match. 
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname
  for area, id in pairs(list) do
    if area:find(areaname, 1, true) then
      if returnid then return false, "more than one area matches" end
      returnid = id; fullareaname = area
    end
  end
  
  return returnid, fullareaname
end

-- using the sample findAreaID() function defined in the getAreaTable() example, 
-- we'll define a function that echo's us a nice list of all rooms in an area with their ID
function echoRoomList(areaId)
  local id = areaId
  local msg = getAreaTableSwap()[id]
  if id then
    local roomlist, endresult = getAreaRooms(id), {}
  
    -- obtain a room list for each of the room IDs we got
    for _, id in pairs(roomlist) do
      endresult[id] = getRoomName(id)
    end
  
    -- now display something half-decent looking
    cecho(string.format(
      "List of all rooms in %s (%d):\n", msg, table.size(endresult)))

    for roomid, roomname in pairs(endresult) do
      local x,y,z = getRoomCoordinates(roomid)
      cecho(string.format(
        "%6s: %s [%d, %d, %d]", roomid, roomname, x, y, z))
      echoLink("[usun lokacje]", "deleteRoom(" .. roomid .. ")", "Usuwa lokacje z mapy")
      echo("\n")
    end
  elseif not id and msg then
    echo("ID not found; " .. msg)
  else
    echo("No areas matched the query.")
  end
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Utils</name>
				<packageName></packageName>
				<script>--Utils
wycinanie_id = wycinanie_id or {}
seq_id_wycinania = seq_id_wycinania or 0
kolejka_komend = kolejka_komend or {}

function _wycinaj(dodatki)
	dodatki = dodatki or ""
	local t = "__" .. seq_id_wycinania .. "__";
	seq_id_wycinania = seq_id_wycinania + 1
	wycinanie_id[t] = tempRegexTrigger(".*", [[
		if(isPrompt()) then
			killTrigger(wycinanie_id["]] .. t .. [["]);
			]] .. dodatki .. [[
--			echo("\nPrompt, koniec wycinania id " .. wycinanie_id["]] .. t .. [["] .. "!\n")
			wycinanie_id["]] .. t .. [["] = nil;
		else
--			echo("rozmowy", getCurrentLine());
			selectCurrentLine(); deleteLine();
		end
		]])
end

function wycinajDoPrompta(dodatki)
	tempTimer(0, function() _wycinaj(dodatki) end)
end


function killAll()
	for i = 1, 100000 do
		if(killTrigger(i)) then echo("Killed trigger " .. i .. "\n"); end
		if(killAlias(i)) then echo("Killed alias " .. i .. "\n"); end
	end
end

</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>odmiana</name>
					<packageName></packageName>
					<script>--odmiana
odmiana = odmiana or {}
seq_id_odmiana = seq_id_odmiana or 0
odmiana_id = odmiana_id or {}

przypadki = {"Mianownik", "Dopelniacz", "Celownik", "Biernik", "Narzednik", "Miejscownik"}

function ustawOdmiane(co, odmtab)
	odmiana[co] = {}
	for i, przyp in pairs(przypadki) do
		odmiana[co][przyp] = odmtab[i]
		odmiana[przyp] = odmiana[przyp] or {}
		odmiana[przyp][odmtab[i]] = co
	end
end

function odmienCallback(co, linia)
	local a, b, c = rex_pcre.new("([^ ]+): (.+)[.,]"):exec(linia)
	local przypadek = linia:sub(c[1], c[2])
	local wartosc = linia:sub(c[3], c[4])
	odmiana[co] = odmiana[co] or {}
	odmiana[co][przypadek] = wartosc
	odmiana[przypadek] = odmiana[przypadek] or {}
	odmiana[przypadek][wartosc] = co
end

function odmien(co, callback_fun)
	if(co == nil or #co &lt; 1) then return end
	if(odmiana[co] ~= nil) then
		if(callback_fun ~= nil) then tempTimer(0, callback_fun) end
		return
	end
	if(odmiana_id[co] ~= nil) then return end
	callback_fun = callback_fun or ""
	odmiana_id[co] = tempRegexTrigger("(&gt; |)(.*?(" .. co:lower() .. "|" .. co:title() .. ").*?) odmienia sie nastepujaco:", [[
		killTrigger(odmiana_id["]] .. co .. [["]);
		odmiana_id["]] .. co .. [["] = nil;
		_wycinaj("]] .. callback_fun .. [[");
		tempLineTrigger(1, 6, "odmienCallback(\"" .. matches[3] .. "\", line)");		
	]])
	send("!odmien " .. co:lower(), false)
end

function sprawdzOdmianyKondycja(komenda, callback_fun)
	if(not komenda) then return end
	callback_fun = callback_fun or ""
	local teamKonTrigger = tempRegexTrigger("(.+) jest ",
		[[
			odmien(matches[2]);
		]])
	wycinajDoPrompta("killTrigger(" .. teamKonTrigger .. "); " .. callback_fun)
	send("!" .. komenda, false)
end
</script>
					<eventHandlerList />
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>idleTimer</name>
					<packageName></packageName>
					<script>--Utils::idleTimer
last_send_time = last_send_time or getTime()

function idleTimer(event_name)
	last_send_time = getTime()
end

function getIdleTime()
	local now = getTime()
	return (now.sec + now.min * 60 + now.hour * 3600) - (last_send_time.sec + last_send_time.min * 60 + last_send_time.hour * 3600)
end</script>
					<eventHandlerList>
						<string>sysDataSendRequest</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>mapper</name>
					<packageName></packageName>
					<script>--Utils::mapper
function clearMap()
	for k, v in pairs(getAreaTable()) do
		echo("Removing area: " .. k .. "\n")
		deleteArea(v);
	end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>paste_cmd</name>
					<packageName></packageName>
					<script>--Utils::paste_cmd
paste_enabled = paste_enabled or nil
paste_alias_id = paste_alias_id or nil

function paste_cmd(tresc)
	if(paste_enabled == nil) then return end
	--denyCurrentSend()
	if(tresc == "/paste_end") then
		end_paste()
		return
	end
	send(paste_enabled .. " " .. tresc, false)
end

function end_paste()
	if(paste_enabled == nil) then return end
	paste_enabled = nil
	killAlias(paste_alias_id)
	echo("PASTE mode ended.\n")
end

function start_paste(cmd)
	end_paste()
	paste_enabled = cmd
	paste_alias_id = tempAlias("^(.+)", [[paste_cmd(matches[2])]])
	echo("Entering PASTE mode. Type /paste_end to end.\n")
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>opisy_poziomow</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>opis_cech_poziomu</name>
					<packageName></packageName>
					<script>-- LEVELE
lvlall = {}
lvlnazwy = {}
lvlall[1] = 6;  lvlnazwy[1] = "(Poziom 1/13)"; -- do 6
lvlall[2] = 12; lvlnazwy[2]="(Poziom 2/13)"; -- do 12
lvlall[3] = 18; lvlnazwy[3] = "(Poziom 3/13)"; -- do 18
lvlall[4] = 24; lvlnazwy[4] = "(Poziom 4/13)"; -- do 24
lvlall[5] = 30; lvlnazwy[5] = "(Poziom 5/13)"; -- do 30
lvlall[6] = 36; lvlnazwy[6] = "(Poziom 6/13)"; -- do 36
lvlall[7] = 42; lvlnazwy[7] ="(Poziom 7/13)"; -- do 42
lvlall[8] = 48; lvlnazwy[8] = "(Poziom 8/13)"; -- do 48
lvlall[9] = 54; lvlnazwy[9] ="(Poziom 9/13)"; -- do 54
lvlall[10]= 60; lvlnazwy[10] ="(Poziom 10/13)"; -- do 60
lvlall[11]= 66; lvlnazwy[11] = "(Poziom 11/13)"; -- do 66
lvlall[12]= 70; lvlnazwy[12] ="(Poziom 12/13)"; -- do 72
lvlall[13]= 78; lvlnazwy[13] = "(Poziom 13/13)"; -- do 78

-- CECHY SILA
silaall = {}
silaall["slabiutka"] = "1"; silaall["slabiutki"] = "1";
silaall["slabowity"] = "2"; silaall["slabowita"] = "2";
silaall["watly"] = "3"; silaall["watla"] = "3";
silaall["cherlawy"] = "4"; silaall["cherlawa"] = "4";
silaall["slaba"] = "5"; silaall["slaby"] = "5";
silaall["krzepki"] = "6"; silaall["krzepka"] = "6";
silaall["silny"] = "7"; silaall["silna"] = "7";
silaall["mocny"] = "8"; silaall["mocna"] = "8";
silaall["tega"] = "9"; silaall["tegi"] = "9";
silaall["potezny"] = "10"; silaall["potezna"] = "10";
silaall["mocarny"] = "11"; silaall["mocarna"] = "11";
silaall["tytaniczny"] = "12"; silaall["tytaniczna"] = "12";
silaall["wszechmocny"] = "13"; silaall["wszechmocna"] = "13";

silaall["slabiutki jak na polboga"] = "14"; silaall["slabiutka jak na polboginie"] = "14";
silaall["slabowity jak na polboga"] = "15"; silaall["slabowita jak na polboginie"] = "15";
silaall["watly jak na polboga"] = "16"; silaall["watla jak na polboginie"] = "16";
silaall["cherlawy jak na polboga"] = "17"; silaall["cherlawa jak na polboginie"] = "17";
silaall["slaby jak na polboga"] = "18"; silaall["slaba jak na polboginie"] = "18";
silaall["krzepki jak na polboga"] = "19"; silaall["krzepka jak na polboginie"] = "19";
silaall["silny jak na polboga"] = "20"; silaall["silna jak na polboginie"] = "20";
silaall["mocny jak na polboga"] = "21"; silaall["mocna jak na polboginie"] = "21";
silaall["tega jak na polboga"] = "22"; silaall["tegi jak na polboginie"] = "22";
silaall["potezny jak na polboga"] = "23"; silaall["potezna jak na polboginie"] = "23";
silaall["mocarny jak na polboga"] = "24"; silaall["mocarna jak na polboginie"] = "24";
silaall["tytaniczny jak na polboga"] = "25"; silaall["tytaniczna jak na polboginie"] = "25";
silaall["wszechmocny jak na polboga"] = "26"; silaall["wszechmocna jak na polboginie"] = "26";

silaall["slabiutki jak na boga"] = "27"; silaall["slabiutka jak na boginie"] = "27";
silaall["slabowity jak na boga"] = "28"; silaall["slabowita jak na boginie"] = "28";
silaall["watly jak na boga"] = "29"; silaall["watla jak na boginie"] = "29";
silaall["cherlawy jak na boga"] = "30"; silaall["cherlawa jak na boginie"] = "30";
silaall["slaby jak na boga"] = "31"; silaall["slaba jak na boginie"] = "31";
silaall["krzepki jak na boga"] = "32"; silaall["krzepka jak na boginie"] = "32";
silaall["silny jak na boga"] = "33"; silaall["silna jak na boginie"] = "33";
silaall["mocny jak na boga"] = "34"; silaall["mocna jak na boginie"] = "34";
silaall["tega jak na boga"] = "35"; silaall["tegi jak na boginie"] = "35";
silaall["potezny jak na boga"] = "36"; silaall["potezna jak na boginie"] = "36";
silaall["mocarny jak na boga"] = "37"; silaall["mocarna jak na boginie"] = "37";
silaall["tytaniczny jak na boga"] = "38"; silaall["tytaniczna jak na boginie"] = "38";
silaall["wszechmocny jak na boga"] = "39"; silaall["wszechmocna jak na boginie"] = "39";





-- CECHY ZRECZNOSC
zrecznoscall ={}
zrecznoscall["nieskoordynowany"] = "1"; zrecznoscall["nieskoordynowana"] = "1";
zrecznoscall["niezdarny"] = "2"; zrecznoscall["niezdarna"] = "2";
zrecznoscall["niezreczny"] = "3"; zrecznoscall["niezreczna"] = "3";
zrecznoscall["niezgrabny"] = "4"; zrecznoscall["niezgrabna"] = "4";
zrecznoscall["niewprawny"] = "5"; zrecznoscall["niewprawna"] = "5";
zrecznoscall["sprawny"] = "6"; zrecznoscall["sprawna"] = "6";
zrecznoscall["zreczny"] = "7"; zrecznoscall["zreczna"] = "7";
zrecznoscall["szybki"] = "8"; zrecznoscall["szybka"] = "8";
zrecznoscall["wprawny"] = "9"; zrecznoscall["wprawna"] = "9";
zrecznoscall["zwinny"] = "10"; zrecznoscall["zwinna"] = "10";
zrecznoscall["gibki"] = "11"; zrecznoscall["gibka"] = "11";
zrecznoscall["akrobatyczny"] = "12"; zrecznoscall["akrobatyczna"] = "12";
zrecznoscall["ekwilibrystyczny"] = "13"; zrecznoscall["ekwilibrystyczna"] = "13"

zrecznoscall["nieskoordynowany jak na polboga"] = "14"; zrecznoscall["nieskoordynowana jak na polboginie"] = "14";
zrecznoscall["niezdarny jak na polboga"] = "15"; zrecznoscall["niezdarna jak na polboginie"] = "15";
zrecznoscall["niezreczny jak na polboga"] = "16"; zrecznoscall["niezreczna jak na polboginie"] = "16";
zrecznoscall["niezgrabny jak na polboga"] = "17"; zrecznoscall["niezgrabna jak na polboginie"] = "17";
zrecznoscall["niewprawny jak na polboga"] = "18"; zrecznoscall["niewprawna jak na polboginie"] = "18";
zrecznoscall["sprawny jak na polboga"] = "19"; zrecznoscall["sprawna jak na polboginie"] = "19";
zrecznoscall["zreczny jak na polboga"] = "20"; zrecznoscall["zreczna jak na polboginie"] = "20";
zrecznoscall["szybki jak na polboga"] = "21"; zrecznoscall["szybka jak na polboginie"] = "21";
zrecznoscall["wprawny jak na polboga"] = "22"; zrecznoscall["wprawna jak na polboginie"] = "22";
zrecznoscall["zwinny jak na polboga"] = "23"; zrecznoscall["zwinna jak na polboginie"] = "23";
zrecznoscall["gibki jak na polboga"] = "24"; zrecznoscall["gibka jak na polboginie"] = "24";
zrecznoscall["akrobatyczny jak na polboga"] = "25"; zrecznoscall["akrobatyczna jak na polboginie"] = "25";
zrecznoscall["ekwilibrystyczny jak na polboga"] = "26"; zrecznoscall["ekwilibrystyczna jak na polboginie"] = "26"

zrecznoscall["nieskoordynowany jak na boga"] = "27"; zrecznoscall["nieskoordynowana jak na boginie"] = "27";
zrecznoscall["niezdarny jak na boga"] = "28"; zrecznoscall["niezdarna jak na boginie"] = "28";
zrecznoscall["niezreczny jak na boga"] = "29"; zrecznoscall["niezreczna jak na boginie"] = "29";
zrecznoscall["niezgrabny jak na boga"] = "30"; zrecznoscall["niezgrabna jak na boginie"] = "30";
zrecznoscall["niewprawny jak na boga"] = "31"; zrecznoscall["niewprawna jak na boginie"] = "31";
zrecznoscall["sprawny jak na boga"] = "32"; zrecznoscall["sprawna jak na boginie"] = "32";
zrecznoscall["zreczny jak na boga"] = "33"; zrecznoscall["zreczna jak na boginie"] = "33";
zrecznoscall["szybki jak na boga"] = "34"; zrecznoscall["szybka jak na boginie"] = "34";
zrecznoscall["wprawny jak na boga"] = "35"; zrecznoscall["wprawna jak na boginie"] = "35";
zrecznoscall["zwinny jak na boga"] = "36"; zrecznoscall["zwinna jak na boginie"] = "36";
zrecznoscall["gibki jak na boga"] = "37"; zrecznoscall["gibka jak na boginie"] = "37";
zrecznoscall["akrobatyczny jak na boga"] = "38"; zrecznoscall["akrobatyczna jak na boginie"] = "38";
zrecznoscall["ekwilibrystyczny jak na boga"] = "39"; zrecznoscall["ekwilibrystyczna jak na boginie"] = "39"




-- CECHY WYTRZYMALOSC
wytkaall ={}
wytkaall["delikatny"] = "1"; wytkaall["delikatna"] = "1";
wytkaall["chorowity"] = "2"; wytkaall["chorowita"] = "2";
wytkaall["rachityczny"] = "3"; wytkaall["rachityczna"] = "3";
wytkaall["mizerny"] = "4"; wytkaall["mizerna"] = "4";
wytkaall["kruchy"] = "5"; wytkaall["krucha"] = "5";
wytkaall["dobrze zbudowany"] = "6"; wytkaall["dobrze zbudowana"] = "6";
wytkaall["wytrzymaly"] = "7"; wytkaall["wytrzymala"] = "7";
wytkaall["odporny"] = "8"; wytkaall["odporna"] = "8";
wytkaall["masywny"] = "9"; wytkaall["masywna"] = "9";
wytkaall["twardy"] = "10"; wytkaall["twarda"] = "10";
wytkaall["umiesniony"] = "11"; wytkaall["umiesniona"] = "11";
wytkaall["muskularny"] = "12"; wytkaall["muskularna"] = "12";
wytkaall["atletyczny"] = "13"; wytkaall["atletyczna"] = "13"

wytkaall["delikatny jak na polboga"] = "1"; wytkaall["delikatna jak na polboginie"] = "1";
wytkaall["chorowity jak na polboga"] = "2"; wytkaall["chorowita jak na polboginie"] = "2";
wytkaall["rachityczny jak na polboga"] = "3"; wytkaall["rachityczna jak na polboginie"] = "3";
wytkaall["mizerny jak na polboga"] = "4"; wytkaall["mizerna jak na polboginie"] = "4";
wytkaall["kruchy jak na polboga"] = "5"; wytkaall["krucha jak na polboginie"] = "5";
wytkaall["dobrze zbudowany jak na polboga"] = "6"; wytkaall["dobrze zbudowana jak na polboginie"] = "6";
wytkaall["wytrzymaly jak na polboga"] = "7"; wytkaall["wytrzymala jak na polboginie"] = "7";
wytkaall["odporny jak na polboga"] = "8"; wytkaall["odporna jak na polboginie"] = "8";
wytkaall["masywny jak na polboga"] = "9"; wytkaall["masywna jak na polboginie"] = "9";
wytkaall["twardy jak na polboga"] = "10"; wytkaall["twarda jak na polboginie"] = "10";
wytkaall["umiesniony jak na polboga"] = "11"; wytkaall["umiesniona jak na polboginie"] = "11";
wytkaall["muskularny jak na polboga"] = "12"; wytkaall["muskularna jak na polboginie"] = "12";
wytkaall["atletyczny jak na polboga"] = "13"; wytkaall["atletyczna jak na polboginie"] = "13"

wytkaall["delikatny jak na boga"] = "1"; wytkaall["delikatna jak na boginie"] = "1";
wytkaall["chorowity jak na boga"] = "2"; wytkaall["chorowita jak na boginie"] = "2";
wytkaall["rachityczny jak na boga"] = "3"; wytkaall["rachityczna jak na boginie"] = "3";
wytkaall["mizerny jak na boga"] = "4"; wytkaall["mizerna jak na boginie"] = "4";
wytkaall["kruchy jak na boga"] = "5"; wytkaall["krucha jak na boginie"] = "5";
wytkaall["dobrze zbudowany jak na boga"] = "6"; wytkaall["dobrze zbudowana jak na boginie"] = "6";
wytkaall["wytrzymaly jak na boga"] = "7"; wytkaall["wytrzymala jak na boginie"] = "7";
wytkaall["odporny jak na boga"] = "8"; wytkaall["odporna jak na boginie"] = "8";
wytkaall["masywny jak na boga"] = "9"; wytkaall["masywna jak na boginie"] = "9";
wytkaall["twardy jak na boga"] = "10"; wytkaall["twarda jak na boginie"] = "10";
wytkaall["umiesniony jak na boga"] = "11"; wytkaall["umiesniona jak na boginie"] = "11";
wytkaall["muskularny jak na boga"] = "12"; wytkaall["muskularna jak na boginie"] = "12";
wytkaall["atletyczny jak na boga"] = "13"; wytkaall["atletyczna jak na boginie"] = "13"





-- CECHY INTELIGENCJA
intall = {}
intall["bezmyslny"] = "1"; intall["bezmyslna"] = "1";
intall["ciemny"] = "2"; intall["ciemna"] = "2";
intall["tepy"] = "3"; intall["tepa"] = "3";
intall["nierozumny"] = "4"; intall["nierozumna"] = "4";
intall["ograniczony"] = "5"; intall["ograniczona"] = "5";
intall["rozgarniety"] = "6"; intall["rozgarnieta"] = "6";
intall["pojetny"] = "7"; intall["pojetna"] = "7";
intall["zmyslny"] = "8"; intall["zmyslna"] = "8";
intall["inteligentny"] = "9"; intall["inteligentna"] = "9";
intall["lotny"] = "10"; intall["lotna"] = "10";
intall["bystry"] = "11"; intall["bystra"] = "11";
intall["blyskotliwy"] = "12"; intall["blyskotliwa"] = "12";
intall["genialny"] = "13"; intall["genialna"] = "13"

intall["bezmyslny jak na polboga"] = "14"; intall["bezmyslna jak na polboginie"] = "14";
intall["ciemny jak na polboga"] = "15"; intall["ciemna jak na polboginie"] = "15";
intall["tepy jak na polboga"] = "16"; intall["tepa jak na polboginie"] = "16";
intall["nierozumny jak na polboga"] = "17"; intall["nierozumna jak na polboginie"] = "17";
intall["ograniczony jak na polboga"] = "18"; intall["ograniczona jak na polboginie"] = "18";
intall["rozgarniety jak na polboga"] = "19"; intall["rozgarnieta jak na polboginie"] = "19";
intall["pojetny jak na polboga"] = "20"; intall["pojetna jak na polboginie"] = "20";
intall["zmyslny jak na polboga"] = "21"; intall["zmyslna jak na polboginie"] = "21";
intall["inteligentny jak na polboga"] = "22"; intall["inteligentna jak na polboginie"] = "22";
intall["lotny jak na polboga"] = "23"; intall["lotna jak na polboginie"] = "23";
intall["bystry jak na polboga"] = "24"; intall["bystra jak na polboginie"] = "24";
intall["blyskotliwy jak na polboga"] = "25"; intall["blyskotliwa jak na polboginie"] = "25";
intall["genialny jak na polboga"] = "26"; intall["genialna jak na polboginie"] = "26"


intall["bezmyslny jak na boga"] = "27"; intall["bezmyslna jak na boginie"] = "27";
intall["ciemny jak na boga"] = "28"; intall["ciemna jak na boginie"] = "28";
intall["tepy jak na boga"] = "29"; intall["tepa jak na boginie"] = "29";
intall["nierozumny jak na boga"] = "30"; intall["nierozumna jak na boginie"] = "30";
intall["ograniczony jak na boga"] = "31"; intall["ograniczona jak na boginie"] = "31";
intall["rozgarniety jak na boga"] = "32"; intall["rozgarnieta jak na boginie"] = "32";
intall["pojetny jak na boga"] = "33"; intall["pojetna jak na boginie"] = "33";
intall["zmyslny jak na boga"] = "34"; intall["zmyslna jak na boginie"] = "34";
intall["inteligentny jak na boga"] = "35"; intall["inteligentna jak na boginie"] = "35";
intall["lotny jak na boga"] = "36"; intall["lotna jak na boginie"] = "36";
intall["bystry jak na boga"] = "37"; intall["bystra jak na boginie"] = "37";
intall["blyskotliwy jak na boga"] = "38"; intall["blyskotliwa jak na boginie"] = "38";
intall["genialny jak na boga"] = "39"; intall["genialna jak na boginie"] = "39"




-- CECHY MADROSC
madroscall = {}
madroscall["glupi"] = "1"; madroscall["glupia"] = "1";
madroscall["durny"] = "2"; madroscall["durna"] = "2";
madroscall["zacofany"] = "3"; madroscall["zacofana"] = "3";
madroscall["niemadry"] = "4"; madroscall["niemadra"] = "4";
madroscall["niewyksztalcony"] = "5"; madroscall["niewyksztalcona"] = "5";
madroscall["roztropny"] = "6"; madroscall["roztropna"] = "6";
madroscall["wyksztalcony"] = "7"; madroscall["wyksztalcona"] = "7";
madroscall["rozsadny"] = "8"; madroscall["rozsadna"] = "8";
madroscall["logiczny"] = "9"; madroscall["logiczna"] = "9";
madroscall["madry"] = "10"; madroscall["madra"] = "10";
madroscall["uczony"] = "11"; madroscall["uczona"] = "11";
madroscall["oswiecony"] = "12"; madroscall["oswiecona"] = "12";
madroscall["wszechwiedzacy"] = "13"; madroscall["wszechwiedzaca"] = "13"

madroscall["glupi jak na polboga"] = "14"; madroscall["glupia jak na polboginie"] = "14";
madroscall["durny jak na polboga"] = "15"; madroscall["durna jak na polboginie"] = "15";
madroscall["zacofany jak na polboga"] = "16"; madroscall["zacofana jak na polboginie"] = "16";
madroscall["niemadry jak na polboga"] = "17"; madroscall["niemadra jak na polboginie"] = "17";
madroscall["niewyksztalcony jak na polboga"] = "18"; madroscall["niewyksztalcona jak na polboginie"] = "18";
madroscall["roztropny jak na polboga"] = "19"; madroscall["roztropna jak na polboginie"] = "19";
madroscall["wyksztalcony jak na polboga"] = "20"; madroscall["wyksztalcona jak na polboginie"] = "20";
madroscall["rozsadny jak na polboga"] = "21"; madroscall["rozsadna jak na polboginie"] = "21";
madroscall["logiczny jak na polboga"] = "22"; madroscall["logiczna jak na polboginie"] = "22";
madroscall["madry jak na polboga"] = "23"; madroscall["madra jak na polboginie"] = "23";
madroscall["uczony jak na polboga"] = "24"; madroscall["uczona jak na polboginie"] = "24";
madroscall["oswiecony jak na polboga"] = "25"; madroscall["oswiecona jak na polboginie"] = "25";
madroscall["wszechwiedzacy jak na polboga"] = "26"; madroscall["wszechwiedzaca jak na polboginie"] = "26"

madroscall["glupi jak na boga"] = "27"; madroscall["glupia jak na boginie"] = "27";
madroscall["durny jak na boga"] = "28"; madroscall["durna jak na boginie"] = "28";
madroscall["zacofany jak na boga"] = "29"; madroscall["zacofana jak na boginie"] = "29";
madroscall["niemadry jak na boga"] = "30"; madroscall["niemadra jak na boginie"] = "30";
madroscall["niewyksztalcony jak na boga"] = "31"; madroscall["niewyksztalcona jak na boginie"] = "31";
madroscall["roztropny jak na boga"] = "32"; madroscall["roztropna jak na boginie"] = "32";
madroscall["wyksztalcony jak na boga"] = "33"; madroscall["wyksztalcona jak na boginie"] = "33";
madroscall["rozsadny jak na boga"] = "34"; madroscall["rozsadna jak na boginie jak na boginie"] = "34";
madroscall["logiczny jak na boga"] = "35"; madroscall["logiczna jak na boginie"] = "35";
madroscall["madry jak na boga"] = "36"; madroscall["madra jak na boginie"] = "36";
madroscall["uczony jak na boga"] = "37"; madroscall["uczona jak na boginie"] = "37";
madroscall["oswiecony jak na boga"] = "38"; madroscall["oswiecona jak na boginie"] = "38";
madroscall["wszechwiedzacy jak na boga"] = "39"; madroscall["wszechwiedzaca jak na boginie"] = "39"

-- CECHY ODWAGA
odwagaall={}
odwagaall["tchorzliwy"] ="1"; odwagaall["tchorzliwa"] ="1";
odwagaall["strachliwy"] ="2"; odwagaall["strachliwa"] ="2";
odwagaall["bojazliwy"] ="3"; odwagaall["bojazliwa"] ="3";
odwagaall["lekliwy"] ="4"; odwagaall["lekliwa"] ="4";
odwagaall["niepewny"] ="5"; odwagaall["niepewna"] ="5";
odwagaall["zdecydowany"] ="6"; odwagaall["zdecydowana"] ="6";
odwagaall["niezachwiany"] ="7"; odwagaall["niezachwiana"] ="7";
odwagaall["odwazny"] ="8"; odwagaall["odwazna"] ="8";
odwagaall["dzielny"] = "9"; odwagaall["dzielna"] = "9";
odwagaall["nieugiety"] = "10"; odwagaall["nieugieta"] = "10";
odwagaall["mezny"] = "11"; odwagaall["mezna"] = "11";
odwagaall["bohaterski"] = "12"; odwagaall["braterska"] = "12";
odwagaall["heroiczny"] = "13"; odwagaall["heroiczna"] = "13";

odwagaall["tchorzliwy jak na polboga"] ="14"; odwagaall["tchorzliwa jak na polboginie"] ="14";
odwagaall["strachliwy jak na polboga"] ="15"; odwagaall["strachliwa jak na polboginie"] ="15";
odwagaall["bojazliwy jak na polboga"] ="16"; odwagaall["bojazliwa jak na polboginie"] ="16";
odwagaall["lekliwy jak na polboga"] ="17"; odwagaall["lekliwa jak na polboginie"] ="17";
odwagaall["niepewny jak na polboga"] ="18"; odwagaall["niepewna jak na polboginie"] ="18";
odwagaall["zdecydowany jak na polboga"] ="19"; odwagaall["zdecydowana jak na polboginie"] ="19";
odwagaall["niezachwiany jak na polboga"] ="20"; odwagaall["niezachwiana jak na polboginie"] ="20";
odwagaall["odwazny jak na polboga"] ="21"; odwagaall["odwazna jak na polboginie"] ="21";
odwagaall["dzielny jak na polboga"] = "22"; odwagaall["dzielna jak na polboginie"] = "22";
odwagaall["nieugiety jak na polboga"] = "23"; odwagaall["nieugieta jak na polboginie"] = "23";
odwagaall["mezny jak na polboga"] = "24"; odwagaall["mezna jak na polboginie"] = "24";
odwagaall["bohaterski jak na polboga"] = "25"; odwagaall["braterska jak na polboginie"] = "25";
odwagaall["heroiczny jak na polboga"] = "26"; odwagaall["heroiczna jak na polboginie"] = "26";

odwagaall["tchorzliwy jak na boga"] ="27"; odwagaall["tchorzliwa jak na boginie"] ="27";
odwagaall["strachliwy jak na boga"] ="28"; odwagaall["strachliwa jak na boginie"] ="28";
odwagaall["bojazliwy jak na boga"] ="29"; odwagaall["bojazliwa jak na boginie"] ="29";
odwagaall["lekliwy jak na boga"] ="30"; odwagaall["lekliwa jak na boginie"] ="30";
odwagaall["niepewny jak na boga"] ="31"; odwagaall["niepewna jak na boginie"] ="31";
odwagaall["zdecydowany jak na boga"] ="32"; odwagaall["zdecydowana jak na boginie"] ="32";
odwagaall["niezachwiany jak na boga"] ="33"; odwagaall["niezachwiana jak na boginie"] ="33";
odwagaall["odwazny jak na boga"] ="34"; odwagaall["odwazna jak na boginie"] ="34";
odwagaall["dzielny jak na boga"] = "35"; odwagaall["dzielna jak na boginie"] = "35";
odwagaall["nieugiety jak na boga"] = "36"; odwagaall["nieugieta jak na boginie"] = "36";
odwagaall["mezny jak na boga"] = "37"; odwagaall["mezna jak na boginie"] = "37";
odwagaall["bohaterski jak na boga"] = "38"; odwagaall["braterska jak na boginie"] = "38";
odwagaall["heroiczny jak na boga"] = "39"; odwagaall["heroiczna jak na boginie"] = "39";</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>opisy_pozostale</name>
					<packageName></packageName>
					<script>--opisy poziomow
require "rex_pcre"
rex_pcre = rex_pcre or package.loaded.rex_pcre

kondycje = {"na skraju smierci", "ledwo zyw(y|a|e)", "zmasakrowan(y|a|e)", "ciezko rann(y|a|e)", "w zlym stanie",
	"w zlej kondycji", "rann(y|a|e)", "poranion(y|a|e)", "pokiereszowan(y|a|e)", "lekko rann(y|a|e)", "poturbowan(y|a|e)",
	"w dobrym stanie", "w swietnej kondycji", "w pelni zdrow(|a|e)"}

kondycjekolory = {
"&lt;sandy_brown&gt;#      ", "&lt;green&gt;#      ",
"&lt;green&gt;#&lt;sandy_brown&gt;#     ", "&lt;green&gt;##     ",
"&lt;green&gt;#&lt;sandy_brown&gt;#     ", "&lt;green&gt;##     ",
"&lt;green&gt;#&lt;sandy_brown&gt;#     ", "&lt;green&gt;##     ",
"&lt;green&gt;##&lt;sandy_brown&gt;#    ", "&lt;green&gt;###    ",
"&lt;green&gt;###&lt;sandy_brown&gt;#   ", "&lt;green&gt;####   ",
"&lt;green&gt;####&lt;sandy_brown&gt;#  ", "&lt;green&gt;#####  ",
"&lt;green&gt;#####&lt;sandy_brown&gt;# ", "&lt;green&gt;###### ",
"&lt;green&gt;######&lt;sandy_brown&gt;#", "&lt;green&gt;#######"
}


mana = {"u kresu sil", "wykonczon(y|a|e)", "wyczerpan(y|a|e)", "w zlej kondycji", "bardzo zmeczon(y|a|e)",
	"zmeczon(y|a|e)", "znuzon(y|a|e)", "oslabion(y|a|e)", "nadwyrezon(y|a|e)", "lekko oslabion(y|a|e)",
	"nadwatlon(y|a|e)", "w pelni sil"}

panika = {"smiertelnie przerazon(y|a|e)", "histerycznie przerazon(y|a|e)", "przerazon(y|a|e)", "nerwowo",
	"strachliwie", "trwozliwie", "lekliwie", "niespokojnie", "nieswojo", "zaniepokojon(y|a|e)",
	"spokojnie", "bezpiecznie", "bardzo bezpiecznie"}

zmeczenie = {"calkowicie wycienczon(y|a|e)", "wycienczon(y|a|e)", "bardzo wyczerpan(y|a|e)",
	"wyczerpan(y|a|e)", "nieco wyczerpan(y|a|e)", "bardzo zmeczon(y|a|e)", "zmeczon(y|a|e)",
	"troche zmeczon(y|a|e)", "wypoczet(y|a|e)", "w pelni wypoczet(y|a|e)"}

umiejetnosc = {"ledwo", "mizernie", "slabo", "powierzchownie", "znosnie", "poprawnie",
   "umiejetnie", "swietnie", "wspaniale", "fenomenalnie"}

sytosc = {"bardzo glodn[ya]", "glodn[ya]", "najedzon[ya]", "bardzo najedzon[ya]"}

pragnienie = {"chce ci sie bardzo pic", "chce ci sie pic", "troche chce ci sie pic", "nie chce ci sie pic"}

opisy_rany = {
		{"powierzchownie nacina", "plytko nacina", "rozcina", "szeroko kroi", "gleboko tnie",
			"paskudnie rozcina", "rozplatuje", "w pol rozcina"},
		{"plytko nakluwa", "bolesnie kluje", "plytko dzga", "gleboko pcha", "dziurawi",
			"nabija", "na wylot przebija"},
		{"muska", "obija", "uderza", "tlucze", "gruchocze", "kruszy", "rozgniata", "miazdzy",
			"doszczetnie rozgniata"},
		{"[Nn]acina", "[Rr]ozcina", "[Tt]nie", "[Ss]iecze", "[Rr]abie", "[Rr]znie"},
		{"ledwo muska", "lekko rani", "rani", "powaznie rani", "bardzo ciezko rani", "potwornie rani", "masakruje"}
	}

opisy_mrany = {
    {"drobne iskierki wyladowan trzeszcza w ranie",
    	"niebieskie iskry wyladowan skacza po ranie",
      "spore blekitne iskry przypalaja cialo",
		"niewielkie blyskawice wnikaja w cialo wokol, wstrzasajac nim spazmatycznie",
      "mocne wyladowanie skwierczy i wije sie niebieska blyskawica w ranie",
		"potezne wyladowanie rozswietla rane, rozchodzi sie zapach spalenizny i ozonu"},
    {"cialo lekko sztywnieje wokol rany",
		"drobiny ziemi wnikaja w cialo",
		"cialo wokol rany kamienieje",
      "od rany rozchodzi sie siatka pekniec w kamieniejacym ciele",
		"fragmenty skamienialego ciala wykruszaja sie i wypadaja",
      "cialo przemienia sie w kamien"},
	{"slaby rozblysk ognia nieznacznie przypieka cialo",
		"niewielki wybuch ognia lekko przypala rane",
      "wybuch ognia okrywa rane, mocno ja przypalajac",
		"jezory szkarlatnego ognia liza rane, palac ja znacznie",
		"gwaltowna eksplozja ognia calkowicie zwegla rane"},
	{"cialo wokol pokrywa sie cienka warstwa szronu",
		"niewielkie krysztaly lodu tworza sie w ranie",
      	"zmrozone cialo peka",
      	"zlodowaciale cialo kruszy sie i odpada",
      	"wokol pryskaja zlodowaciale fragmenty wyrwanego ciala"},
	{"blekitna poswiata oswieca rane"},
   {"ciemna platanina mroku otula rane",
		"mroczna chmura cienia wnika w rane",
		"mroczne i splatane wzory mroku i smierci wpijaja sie w rane",
		"klab mrocznej eksplozji wije sie wokol rany rozkladajac cialo i kosci"},
	}

opisy_dt = {
	{"pchniecie", "pchniecia", "pcha"},
	{"ciecie", "ciecia", "tnie"},
	{"uderzenie", "uderzenia", "uderza"},
	}

opisy_mdt_def = {
		"bezsilny podmuch wiatru",
		"chmura drobin piasku, zbyt drobnych by skrzywdzic",
		"krotki strumien ognia i klab dymu",
		"klab zmrozonej pary, ktora jednak szybko rozprasza sie w powietrzu",
		"lekka, niebieska poswiata",
		"czarny klab mrocznej, bezglosnej eksplozji",
	}

opisy_latwosci = {
		"szczesliwie|ledwo|niezdarnie", "z trudem|z wysilkiem", "udanie|wprawnie|prosto",
		"gladko|umiejetnie|z latwoscia", "bez trudu|bez problemu|z latwoscia",
		"dokladnie|perfekcyjnie"
	}

szeregi = {["pierwszym"] = 1, ["drugim"] = 2, ["trzecim"] = 3}

function jakiPoziomOpisu(tabelka, opis)
	for i, k in ipairs(tabelka) do
		if(type(k) == "table") then
			local idx, ss = jakiPoziomOpisu(k, opis)
			if(idx ~= nil) then return idx, ss end
		elseif(rex_pcre.new("^" .. k .. "$"):exec(opis)) then
			return i, #tabelka
		end
	end
	return nil;
end

function jakaPozycjaOpisu(tabelka, opis)
	local mb, me, mk = 0, 0, nil
	for i, k in ipairs(tabelka) do
		if(type(k) == "table") then
			local b, e, k = jakaPozycjaOpisu(k, opis)
			if(b ~= nil and (me - mb &lt; e - b)) then
				mb, me, mk =  b, e, k
			end
		else
			local b, e = rex_pcre.new(k):exec(opis)
			if(b ~= nil and (me - mb &lt; e - b)) then
				mb, me, mk =  b, e, k
			end
		end
	end
	return mb, me, mk;
end

</script>
					<eventHandlerList />
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Walka</name>
				<packageName></packageName>
				<script>--walka

function removeAllEnemiesFor(id)
	for i, eid in ipairs(getEnemiesFor(id)) do
		hideEnemyStatsFor(eid)
	end
end

function adjustCombatOnMove()
	local team = getWholeTeam()
	for i, data in ipairs(team) do
		removeAllEnemiesFor(data)
	end
end
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>statystyka</name>
					<packageName></packageName>
					<script>--Walka::statystyka
zabici = zabici or {}

function dodajZabitego(kto, opis)
	opis = table.remove(opis:split(" "))
	if(zabici[kto] == nil) then zabici[kto] = {} end
	if(zabici[kto][opis] == nil) then zabici[kto][opis] = 0 end
	zabici[kto][opis] = zabici[kto][opis] + 1
end</script>
					<eventHandlerList />
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Druzyna</name>
				<packageName></packageName>
				<script>--Druzyna

-- przy porzucaniu druzyny
function removeTeam()
	--display(debug.traceback())
	local stats = getWholeTeam()
	for k, v in pairs(stats) do
		--display("Team member: " .. v.name .. ", is own: " .. tostring(v.is_own))
		if(v.is_own ~= true) then
			hideStatsFor(v.id)
		end
	end
end

-- Podmienia opis czlonka druzyny (np. jak sie przedstawil)
function druzynaPodmien(id, imie)
	local stat = findElementById(id, containerStats)
	if(stat ~= nil) then
		stat.imieLabel:echo("&lt;center&gt;&lt;b&gt;" .. imie .. "&lt;/b&gt;&lt;/center&gt;")
		stat.imie = imie
	end
end</script>
				<eventHandlerList />
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>gmcp</name>
				<packageName></packageName>
				<script>--gmcp</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Vitals</name>
					<packageName></packageName>
					<script>--gmcp_Vitals
function gmcp_Vitals(event)
	if(gmcp.Char.Vitals == nil) then return end
	local v = gmcp.Char.Vitals
	--display(v)
	local stat = findElementById(v.id, containerStats)
	if(v.self == 1 and stat == nil) then
		showStatsFor(v.id, string.title(v.nazwa), true); --safe-guard: pokaz staty dla gracza jesli nie ma...
	end

	if(v.Hp) then
		setStatGauge(v.id, "kondycja", v.Hp + 1, #kondycje);
	end
	if(v.Mana) then
		setStatGauge(v.id, "mana", v.Mana + 1, #mana);
	end
	if(v.Fatigue) then
		setStatGauge(v.id, "zmeczenie", v.Fatigue + 1, #zmeczenie);
	end
	gmcp.Char.Vitals = nil
end</script>
					<eventHandlerList>
						<string>gmcp.Char.Vitals</string>
					</eventHandlerList>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Room</name>
					<packageName></packageName>
					<script>--gmcp_Room</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Room_Glance</name>
						<packageName></packageName>
						<script>--gmcp_Room_Glance
function gmcp_Room_Glance(event)
	--display(gmcp.Room)
	if(gmcp.Room.Glance == nil) then return end
	local wyjscia_combined = gmcp.Room.Glance.wyjscia
	for k, v in pairs(gmcp.Room.Glance.drzwi) do table.insert(wyjscia_combined, v[1]) end
	drawExitsOnConsole(wyjscia_combined) -- zmienic na ...FromMap()
	enrichMapRoom(gmcp.Room.Glance)
	displaySpecialExitsFromMap()
	gmcp.Room.Glance = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Glance</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Room_Info</name>
						<packageName></packageName>
						<script>--gmcp_Room_Info
--move_living
function gmcp_Room_Info(event)
	--display(gmcp.Room)
	if(gmcp.Room.Info == nil) then return end
	if(type(gmcp.Room.Info.komenda) ~= "table") then
		gmcp.Room.Info.komenda = {"X", "", "", 0}
	end
  makeMapRoom(gmcp.Room.Info)
	if(gmcp.Room.Area ~= nil and gmcp.Room.Area.Update ~= nil) then
		updateRoomAreaData(gmcp.Room.Area.Update)
		gmcp.Room.Area.Update = nil
	end
	drawExitsOnConsole({})
	adjustCombatOnMove()
	--echo("Area: " .. gmcp.Room.Info.obszar .. "\n")
	raiseEvent("warlock.newRoom", gmcp.Room.Info.id)
	gmcp.Room.Info = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Room_Leave</name>
						<packageName></packageName>
						<script>-- gmcp_Room_Leave
-- Ktos wychodzi z lokacji

function gmcp_Room_Leave()
	if(gmcp.Room.Leave == nil) then return end
	--display(gmcp.Room.Leave)
	local id = gmcp.Room.Leave.id
	hideEnemyStatsFor(id)
	gmcp.Room.Leave = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Leave</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Introduced</name>
					<packageName></packageName>
					<script>--gmcp_Introduced
function gmcp_Introduced(event)
	--display(gmcp.Introduced)
	local info = gmcp.Introduced.Info
	local co = info.odmiana[1]

	ustawOdmiane(co, info.odmiana)
	druzynaPodmien(info.id, co);
end</script>
					<eventHandlerList>
						<string>gmcp.Introduced</string>
					</eventHandlerList>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Team</name>
					<packageName></packageName>
					<script>--gmcp_Team</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Team_Join</name>
						<packageName></packageName>
						<script>--gmcp_Team_Join
--Ktos dołącza do istniejącej drużyny
function gmcp_Team_Join()
	local v = gmcp.Team.Join
	if(v == nil) then return end
	--display(v)
	showStatsFor(v.id, v.nazwa, v.self == 1, false, v.szereg)
	gmcp.Team.Join = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Team.Join</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Team_Leave</name>
						<packageName></packageName>
						<script>--gmcp_Team_Leave
--Ktoś opuszcza drużynę
function gmcp_Team_Leave()
	local v = gmcp.Team.Leave
	if(v == nil) then return end
	--display(v)
	hideStatsFor(v.id)
	gmcp.Team.Leave = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Team.Leave</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>gmcp_Team_Status</name>
						<packageName></packageName>
						<script>--gmcp_Team_Status
--Status z pełną lista drużyny.
function gmcp_Team_Status()
	local v = gmcp.Team.Status
	if(v == nil) then return end
	--display(v)
	if(v.prowadzacy == 0) then
		removeTeam()
		return
	end
	for i, t in pairs(v.druzyna) do
    showStatsFor(t.id, t.nazwa, t.self == 1, t.id == v.prowadzacy.id, t.szereg)
	end
	gmcp.Team.Status = nil
end</script>
						<eventHandlerList>
							<string>gmcp.Team.Status</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Attack</name>
					<packageName></packageName>
					<script>--gmcp_Attack

function gmcp_Attack()
	if(gmcp.Attack == nil) then return end
	local a = gmcp.Attack
	--display(a)
	local stat = findElementById(a.kogo.id, containerStats)
	if(stat ~= nil and stat.is_enemy == false) then
		-- pokazmy okienko statow dla zaatakowanego czlonka druzyny przez wroga
		showEnemyStatsFor(a.kogo.id, a.kto.id, a.kto.nazwa, true)
	end
	stat = findElementById(a.kto.id, containerStats)
	if(stat ~= nil and stat.is_enemy == false) then
		-- pokazmy okienko statow dla zaatakowanego wroga przez czlonka druzyny
		showEnemyStatsFor(a.kto.id, a.kogo.id, a.kogo.nazwa, false)
	end
	raiseEvent("warlock.someoneAttacks", a.kto.nazwa, a.kogo.nazwa)
	gmcp.Attack = nil
end
</script>
					<eventHandlerList>
						<string>gmcp.Attack</string>
					</eventHandlerList>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Kill</name>
					<packageName></packageName>
					<script>--gmcp_Kill

function gmcp_Kill()
	if(gmcp.Kill == nil) then return end
	local a = gmcp.Kill
	--display(a)
	hideEnemyStatsFor(a.kogo.id)
	dodajZabitego(a.kto.nazwa, a.kogo.nazwa)
	raiseEvent("warlock.someoneDied", a.kto.nazwa, a.kogo.nazwa)
	gmcp.Kill = nil
end</script>
					<eventHandlerList>
						<string>gmcp.Kill</string>
					</eventHandlerList>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Init</name>
					<packageName></packageName>
					<script>--gmcp_Init
function gmcp_Init()
	if(gmcp.Gmcp.Init == nil) then return end
	--display(gmcp.Gmcp.Init)
	for i, data in ipairs(getWholeTeam()) do
		removeAllEnemiesFor(data)
		hideStatsFor(data.id)
	end
	showStatsFor(gmcp.Gmcp.Init.id, string.title(gmcp.Gmcp.Init.nazwa), true)
	tempTimer(2.0, [[ raiseEvent("warlock.newSession", ]] .. gmcp.Gmcp.Init.nazwa .. [[ ) ]])
	gmcp.Gmcp.Init = nil
end
</script>
					<eventHandlerList>
						<string>gmcp.Gmcp.Init</string>
					</eventHandlerList>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gmcp_Area_Update</name>
					<packageName></packageName>
					<script>-- gmcp_Area_Update
function gmcp_Area_Update()
	if(gmcp.Room.Area.Update == nil) then return end
	--display(gmcp.Room.Area.Update)
  local areaId = getAreaId(gmcp.Room.Area.Update.obszar)
	if(areaId ~= -1) then
		local toDelete = true
		local roomId = getRoomIDbyHash(gmcp.Room.Area.Update.id)
		if(roomId ~= -1) then
			local czas = gmcp.Room.Area.Update.czas
			local zapisany = getRoomUserData(roomId, "czas");
			if(zapisany == tostring(czas)) then
				toDelete = false
			end
		end
		if(toDelete) then   
			echo(" * Kasuje obszar '" .. getRoomAreaName(areaId) .. "', wykryte zmiany.\n")
			deleteArea(areaId)
		end
	end
	--echo(" * rID: " .. roomId .. ", czas: " .. czas .. " vs zapisany czas: " .. zapisany .. "\n")
	--gmcp.Room.Area.Update = nil
end</script>
					<eventHandlerList>
						<string>gmcp.Room.Area.Update</string>
					</eventHandlerList>
				</ScriptGroup>
				<Script isActive="no" isFolder="no">
					<name>gmcp_test_handler</name>
					<packageName></packageName>
					<script>function gmcp_test_handler()
  display('GMCP:')
  display(gmcp)
end</script>
					<eventHandlerList>
						<string>gmcp.External</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>pomoc</name>
				<packageName></packageName>
				<script>--Pomoc
scriptsVersion = "3.8.0"
cecho("\n&lt;white&gt;Wpisz /help aby uzyskac pomoc.\n\n")

function makeHelpLink(tekst, description)
	selectString(tekst, 1);
	fg("white");
	setUnderline(true);
	setLink([[send("?]] .. tekst .. [[")]], description);
	resetFormat();
	deselect()
end

function makeHelpLinksFromSeeAlso(linia)
	local tematy = linia:gsub(" ", ""):gsub("\t", ""):split(",")
	for i,v in pairs(tematy) do
		makeHelpLink(v, v);
	end
end

function handleHelpCommands(eventName, cmd)
	if(cmd:sub(1, 1) == "?") then
		--zadanie pomocy!
		local temat = cmd:sub(2)
		local trigs = {}
		if(temat == "ogolne") then
			table.insert(trigs, tempRegexTrigger("([a-z]+)[ ]+-[ ]+([a-zA-Z]+.*)", [[
				makeHelpLink(matches[2], matches[3]);
			]]));
		end
		table.insert(trigs, tempRegexTrigger("(ZOBACZ TEZ|PATRZ TEZ|ZOBACZ TAKZE)", [[
			tempLineTrigger(1, 1, "makeHelpLinksFromSeeAlso(line)");
		]]));
		local s = ""
		for i, v in pairs(trigs) do
			s = s .. "killTrigger(" .. v .. ");\n"
		end
		s = s .. [[ killTrigger(trigKoniecPomocy); ]]
		trigKoniecPomocy = tempRegexTrigger("^(EOF|Nie ma pomocy na ten temat.)", s);
	end	
end

function displayHelp()
	echo("    Aliasy:\n")
	echo("/version - informacja o wersji skryptow (" .. scriptsVersion .. ")\n")
	echo("/paste &lt;komenda&gt; - wklejanie tekstu uzywajac komendy\n")
	echo("/eval &lt;skrypt&gt; - wykonanie skryptu LUA z linii komend\n")
	echo("/zabici - pokazanie statystyk zabitych wrogow\n")
	echo("/drzwi (n|e|s|w|ne|...) (0|1|2|3) - dodaje drzwi w danym kierunku\n")
	echo("/quit - wyjscie (moze psuc profil)\n")
	echo("/kolory - pokazuje tablice nazwanych kolorow\n")
	echo("/akcja (przeciwnik|druzyna|inni) komenda - ustawianie akcji dodatkowych (pod literka S)\n")
	echo("\n")
	echo("    Klawisze:\n")
	echo("Klawiatura numeryczna:\n")
	echo("  0..9 - chodzenie (+ctrl - przemykanie, +ctrl+alt - przemykanie z druzyna\n")
	echo("  - - wyjscie\n")
	echo("  + - wyjscie specjalne lub jedno z (schody, wejscie)\n")
	echo("  * - lazik traktowy\n")
	echo("Klawisze funkcyjne:\n")
	echo("  F5 - kondycja\n")
	echo("  F6 - kondycja przeciwnika\n")
	echo("  F8 - stan\n")
	echo("  F12- przerwanie auto-chodzika\n")
	echo("\n")
	echo("Obsluga mapy:\n")
	echo("  kolko myszy - przyblizanie/oddalanie\n")
	echo("  ALT + przycisk myszy - przesuwanie mapy\n")
	echo("  lewy przycisk myszy - zaznaczanie lokacji (pojedynczo lub wiele naraz)\n")
	echo("  CTRL + lewy przycisk - dodawanie/odejmowanie lokacji z zaznaczenia\n")
	echo("  prawy przycisk myszy - menu kontekstowe do zaznaczonych wczesniej lokacji\n")
	echo("\n")
  echo("Okienka:\n")
  echo("  Domyslnie okienka rozmow, mapy oraz kondycji sa zablokowane. Pod prawym klawiszem myszy\n")
  echo("  na okienku pojawia sie menu kontekstowe gdzie mozna modyfikowac stan okienka, ukrywac, odblokowac.\n")
  echo("  Odblokowane okienka mozna przesuwac i zmieniac ich wielkosc.\n")
end

registerAnonymousEventHandler("sysDataSendRequest", handleHelpCommands)
</script>
				<eventHandlerList />
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>warlock</name>
			<packageName>warlock</packageName>
			<script></script>
			<command></command>
			<keyCode>0</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>kierunki_numpad</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>north</name>
					<packageName></packageName>
					<script></script>
					<command>n</command>
					<keyCode>56</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>south</name>
					<packageName></packageName>
					<script></script>
					<command>s</command>
					<keyCode>50</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>east</name>
					<packageName></packageName>
					<script></script>
					<command>e</command>
					<keyCode>54</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>west</name>
					<packageName></packageName>
					<script></script>
					<command>w</command>
					<keyCode>52</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>nw</name>
					<packageName></packageName>
					<script></script>
					<command>nw</command>
					<keyCode>55</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>ne</name>
					<packageName></packageName>
					<script></script>
					<command>ne</command>
					<keyCode>57</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sw</name>
					<packageName></packageName>
					<script></script>
					<command>sw</command>
					<keyCode>49</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>se</name>
					<packageName></packageName>
					<script></script>
					<command>se</command>
					<keyCode>51</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>up</name>
					<packageName></packageName>
					<script></script>
					<command>u</command>
					<keyCode>53</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>down</name>
					<packageName></packageName>
					<script></script>
					<command>d</command>
					<keyCode>48</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>exit</name>
					<packageName></packageName>
					<script></script>
					<command>wyjscie</command>
					<keyCode>45</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>pierwsze_specjalne</name>
					<packageName></packageName>
					<script>wyjdzSpecjalnym()</script>
					<command></command>
					<keyCode>43</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_n</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na n</command>
					<keyCode>56</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_s</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na s</command>
					<keyCode>50</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_w</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na w</command>
					<keyCode>52</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_e</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na e</command>
					<keyCode>54</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_nw</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na nw</command>
					<keyCode>55</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_ne</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na ne</command>
					<keyCode>57</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_sw</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na sw</command>
					<keyCode>49</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_se</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na se</command>
					<keyCode>51</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_u</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na u</command>
					<keyCode>53</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_d</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie na d</command>
					<keyCode>48</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_n</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na polnoc</command>
					<keyCode>56</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_s</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na s</command>
					<keyCode>50</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_w</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na w</command>
					<keyCode>52</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_e</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na e</command>
					<keyCode>54</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_nw</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na nw</command>
					<keyCode>55</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_ne</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na ne</command>
					<keyCode>57</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_sw</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na sw</command>
					<keyCode>49</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_se</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na se</command>
					<keyCode>51</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_u</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na u</command>
					<keyCode>53</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>sneak_team_d</name>
					<packageName></packageName>
					<script></script>
					<command>przemknij sie z druzyna na d</command>
					<keyCode>48</keyCode>
					<keyModifier>738197504</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>stan</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>kondycja wszystkich</name>
					<packageName></packageName>
					<script>send("!kondycja wszystkich", false)</script>
					<command></command>
					<keyCode>16777268</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>kondycja moja i wroga</name>
					<packageName></packageName>
					<script>send("!kondycja", false)
send("!kondycja przeciwnika", false)</script>
					<command></command>
					<keyCode>16777269</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>stan</name>
					<packageName></packageName>
					<script>send("!stan", false)</script>
					<command></command>
					<keyCode>16777271</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>pomoc</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>16777264</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>ogolne</name>
					<packageName></packageName>
					<script>send("?ogolne")</script>
					<command></command>
					<keyCode>16777265</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>klient</name>
					<packageName></packageName>
					<script>displayHelp()</script>
					<command></command>
					<keyCode>16777264</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>speedwalk</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>abort</name>
					<packageName></packageName>
					<script>abortSpeedWalk()</script>
					<command></command>
					<keyCode>16777275</keyCode>
					<keyModifier>0</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>lazik</name>
					<packageName></packageName>
					<script>lazikWalkStep()</script>
					<command></command>
					<keyCode>42</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
